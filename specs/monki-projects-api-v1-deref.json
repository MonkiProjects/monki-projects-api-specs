{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Monki Projects API"
  },
  "servers": [
    {
      "url": "https://{environment}.monkiprojects.com",
      "description": "Monki Projects API v1",
      "variables": {
        "environment": {
          "default": "api",
          "enum": [
            "api",
            "pre-prod.api"
          ]
        }
      }
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Endpoints related to users."
    },
    {
      "name": "auth",
      "description": "Endpoints related to authentication."
    },
    {
      "name": "placemarks",
      "description": "Endpoints related to placemarks."
    },
    {
      "name": "placemark-submission",
      "description": "Endpoints related to placemark submissions."
    },
    {
      "name": "localized",
      "description": "Endpoints with localizable responses."
    }
  ],
  "paths": {
    "/users/v1/": {
      "post": {
        "summary": "Create User",
        "description": "Creates a user.",
        "operationId": "createUser",
        "tags": [
          "users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "display_name",
                  "email",
                  "password",
                  "confirm_password"
                ],
                "properties": {
                  "username": {
                    "description": "A username (`@`).",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[a-z0-9._]{3,32}$",
                    "example": "lorem_ipsum"
                  },
                  "display_name": {
                    "description": "A user display name.",
                    "type": "string",
                    "example": "Lorem Ipsum"
                  },
                  "email": {
                    "description": "An email address.",
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "description": "A password.",
                    "type": "string",
                    "minLength": 8
                  },
                  "confirm_password": {
                    "description": "A password.",
                    "type": "string",
                    "minLength": 8
                  }
                },
                "example": {
                  "username": "vapor",
                  "display_name": "Vapor",
                  "email": "test@vapor.codes",
                  "password": "password",
                  "confirm_password": "password"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Private details about a user.",
                  "type": "object",
                  "required": [
                    "id",
                    "username",
                    "display_name",
                    "kind",
                    "updated_at",
                    "details",
                    "email"
                  ],
                  "properties": {
                    "id": {
                      "description": "A `UUID` (or `GUID`).",
                      "type": "string",
                      "format": "uuid",
                      "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                    },
                    "username": {
                      "description": "A username (`@`).",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[a-z0-9._]{3,32}$",
                      "example": "lorem_ipsum"
                    },
                    "display_name": {
                      "description": "A user display name.",
                      "type": "string",
                      "example": "Lorem Ipsum"
                    },
                    "country": {
                      "description": "The country of a user. Will generally show as a flag next to the user's display name.",
                      "type": "string",
                      "example": "FR"
                    },
                    "kind": {
                      "description": "The kind of a user. Either a regular user or a bot.",
                      "type": "string",
                      "enum": [
                        "user",
                        "bot"
                      ],
                      "default": "user"
                    },
                    "updated_at": {
                      "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-07-21T17:32:28.000Z"
                    },
                    "details": {
                      "description": "Details about a user.",
                      "type": "object",
                      "required": [
                        "experience",
                        "social_usernames",
                        "created_at"
                      ],
                      "properties": {
                        "bio": {
                          "description": "A user's bio (profile description).",
                          "type": "string"
                        },
                        "location": {
                          "description": "A user's location. It's not formatted nor checked as an existing place, so it could be anything.",
                          "type": "string"
                        },
                        "experience": {
                          "type": "object"
                        },
                        "social_usernames": {
                          "type": "object"
                        }
                      }
                    },
                    "email": {
                      "description": "An email address.",
                      "type": "string",
                      "format": "email"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "InvalidEmail": {
                    "value": {
                      "error": true,
                      "reason": "Your email address is invalid."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "error": true,
                      "reason": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict with other user",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "UsernameNotAvailable": {
                    "value": {
                      "error": true,
                      "reason": "Email or username already taken"
                    }
                  },
                  "EmailNotAvailable": {
                    "value": {
                      "error": true,
                      "reason": "Email or username already taken"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Users",
        "description": "Returns the list of all users.",
        "operationId": "listUsers",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The pagination page. For example, if you paginate 1 to 42 per 10 and ask for the third page, you will get 31 to 40.",
            "required": true,
            "schema": {
              "description": "A pagination page number.",
              "type": "integer",
              "minimum": 1,
              "example": 3
            }
          },
          {
            "in": "query",
            "name": "per",
            "description": "The number of paginated items per page. For example, if you paginate 1 to 42 per 10 and ask for the third page, you will get 31 to 40.",
            "required": true,
            "schema": {
              "description": "The number of paginated items per page.",
              "type": "integer",
              "minimum": 1,
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "description": "The results order. If not set, results won't be ordered.",
            "schema": {
              "description": "The order of the users in an array:\n  * `last_joined`: From the latest created review to the oldest one\n  * `first_joined`: From the first created review to the latest one",
              "type": "string",
              "enum": [
                "last_joined",
                "first_joined"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A paginated array of users.",
                  "type": "object",
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "description": "An array of users (without unnecessary details).",
                      "type": "array",
                      "items": {
                        "description": "Public informations about a user (only required ones).",
                        "type": "object",
                        "required": [
                          "id",
                          "username",
                          "display_name",
                          "kind",
                          "updated_at"
                        ],
                        "properties": {
                          "id": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "username": {
                            "description": "A username (`@`).",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 32,
                            "pattern": "^[a-z0-9._]{3,32}$",
                            "example": "lorem_ipsum"
                          },
                          "display_name": {
                            "description": "A user display name.",
                            "type": "string",
                            "example": "Lorem Ipsum"
                          },
                          "country": {
                            "description": "The country of a user. Will generally show as a flag next to the user's display name.",
                            "type": "string",
                            "example": "FR"
                          },
                          "kind": {
                            "description": "The kind of a user. Either a regular user or a bot.",
                            "type": "string",
                            "enum": [
                              "user",
                              "bot"
                            ],
                            "default": "user"
                          },
                          "updated_at": {
                            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-07-21T17:32:28.000Z"
                          }
                        }
                      }
                    },
                    "metadata": {
                      "description": "Metadata about the response's pagination.",
                      "type": "object",
                      "required": [
                        "page",
                        "per",
                        "total"
                      ],
                      "properties": {
                        "page": {
                          "description": "A pagination page number.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 3
                        },
                        "per": {
                          "description": "The number of paginated items per page.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "total": {
                          "description": "The total count of elements in a paginated result. It represents the total in all pages, and **does not** depend on the number of items per page.",
                          "type": "integer",
                          "minimum": 0,
                          "example": 42
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/v1/{userId}": {
      "get": {
        "summary": "Get User Details",
        "description": "Returns details about a particular user.",
        "operationId": "getUser",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "A user ID.",
            "required": true,
            "schema": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Public informations about a user (including all details).",
                  "type": "object",
                  "required": [
                    "id",
                    "username",
                    "display_name",
                    "kind",
                    "updated_at",
                    "details"
                  ],
                  "properties": {
                    "id": {
                      "description": "A `UUID` (or `GUID`).",
                      "type": "string",
                      "format": "uuid",
                      "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                    },
                    "username": {
                      "description": "A username (`@`).",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[a-z0-9._]{3,32}$",
                      "example": "lorem_ipsum"
                    },
                    "display_name": {
                      "description": "A user display name.",
                      "type": "string",
                      "example": "Lorem Ipsum"
                    },
                    "country": {
                      "description": "The country of a user. Will generally show as a flag next to the user's display name.",
                      "type": "string",
                      "example": "FR"
                    },
                    "kind": {
                      "description": "The kind of a user. Either a regular user or a bot.",
                      "type": "string",
                      "enum": [
                        "user",
                        "bot"
                      ],
                      "default": "user"
                    },
                    "updated_at": {
                      "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-07-21T17:32:28.000Z"
                    },
                    "details": {
                      "description": "Details about a user.",
                      "type": "object",
                      "required": [
                        "experience",
                        "social_usernames",
                        "created_at"
                      ],
                      "properties": {
                        "bio": {
                          "description": "A user's bio (profile description).",
                          "type": "string"
                        },
                        "location": {
                          "description": "A user's location. It's not formatted nor checked as an existing place, so it could be anything.",
                          "type": "string"
                        },
                        "experience": {
                          "type": "object"
                        },
                        "social_usernames": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "User not found": {
                    "value": {
                      "error": true,
                      "reason": "User not found."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Bad user ID",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unprocessable Entity": {
                    "value": {
                      "error": true,
                      "reason": "Unprocessable Entity"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "Deletes a user.",
        "operationId": "deleteUser",
        "tags": [
          "users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "A user ID.",
            "required": true,
            "schema": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Authentication information is missing or is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "error": true,
                      "reason": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "User ID malformatted",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Unprocessable Entity": {
                    "value": {
                      "error": true,
                      "reason": "Unprocessable Entity"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/v1/login": {
      "post": {
        "summary": "Log In",
        "operationId": "logIn",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A Bearer token.",
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Authentication information is missing or is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/placemarks/v1/": {
      "post": {
        "summary": "Create Placemark",
        "description": "Creates a placemark.",
        "operationId": "createPlacemark",
        "tags": [
          "placemarks",
          "localized"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "locale",
            "description": "The desired locale for response localization.",
            "schema": {
              "description": "A locale, as described in [Language and Locale IDs](https://tinyurl.com/apple-language-and-locale-ids).",
              "type": "string",
              "format": "locale",
              "minLength": 2,
              "default": "en",
              "example": "fr-FR"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "An object with data required to create a new placemark.",
                "type": "object",
                "required": [
                  "name",
                  "latitude",
                  "longitude",
                  "kind",
                  "properties"
                ],
                "properties": {
                  "name": {
                    "description": "A placemark `name`.",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 48
                  },
                  "latitude": {
                    "description": "The latitude component of a coordinate.",
                    "type": "number",
                    "format": "double",
                    "minimum": -90,
                    "maximum": 90
                  },
                  "longitude": {
                    "description": "The longitude component of a coordinate.",
                    "type": "number",
                    "format": "double",
                    "minimum": -180,
                    "maximum": 180
                  },
                  "kind": {
                    "description": "A placemark kind `ID`.",
                    "type": "string",
                    "pattern": "^(?:[a-z0-9]+_)*[a-z0-9]+$"
                  },
                  "caption": {
                    "description": "A placemark `caption`. Possibly empty.",
                    "type": "string",
                    "nullable": true
                  },
                  "images": {
                    "description": "An array of image `URL`s.",
                    "type": "array",
                    "uniqueItems": true,
                    "maxItems": 48,
                    "items": {
                      "description": "An image `URL`.",
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "properties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "GeoJSON 'Feature' object",
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc7946#section-3.2"
                  },
                  "allOf": [
                    {
                      "externalDocs": {
                        "url": "https://tools.ietf.org/html/rfc7946#section-3"
                      },
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "discriminator": {
                        "propertyName": "type"
                      },
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "Feature",
                            "FeatureCollection",
                            "Point",
                            "MultiPoint",
                            "LineString",
                            "MultiLineString",
                            "Polygon",
                            "MultiPolygon",
                            "GeometryCollection"
                          ]
                        },
                        "bbox": {
                          "type": "array",
                          "minItems": 4,
                          "items": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "geometry",
                        "properties"
                      ],
                      "properties": {
                        "geometry": {
                          "allOf": [
                            {
                              "nullable": true
                            },
                            {
                              "externalDocs": {
                                "url": "https://tools.ietf.org/html/rfc7946#section-3"
                              },
                              "allOf": [
                                {
                                  "externalDocs": {
                                    "url": "https://tools.ietf.org/html/rfc7946#section-3"
                                  },
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "discriminator": {
                                    "propertyName": "type"
                                  },
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Feature",
                                        "FeatureCollection",
                                        "Point",
                                        "MultiPoint",
                                        "LineString",
                                        "MultiLineString",
                                        "Polygon",
                                        "MultiPolygon",
                                        "GeometryCollection"
                                      ]
                                    },
                                    "bbox": {
                                      "type": "array",
                                      "minItems": 4,
                                      "items": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "discriminator": {
                                    "propertyName": "type"
                                  },
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Point",
                                        "MultiPoint",
                                        "LineString",
                                        "MultiLineString",
                                        "Polygon",
                                        "MultiPolygon",
                                        "GeometryCollection"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        "properties": {
                          "type": "object",
                          "nullable": true
                        },
                        "id": {
                          "oneOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "string"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Missing field": {
                    "value": {
                      "error": true,
                      "reason": "name is required"
                    }
                  },
                  "Name too small": {
                    "value": {
                      "error": true,
                      "reason": "name is less than minimum of 3 character(s)"
                    }
                  },
                  "Invalid coordinates": {
                    "value": {
                      "error": true,
                      "reason": "latitude is greater than maximum of 90.0"
                    }
                  },
                  "Invalid kind": {
                    "description": "We could not find the placemark kind you provided.",
                    "value": {
                      "error": true,
                      "reason": "Placemark kind not found"
                    }
                  },
                  "Invalid property": {
                    "value": {
                      "error": true,
                      "reason": "Invalid property: { \"kind\": \"feature\", \"id\": \"random_id\" }"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "No auth provided": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  },
                  "Invalid auth type": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  },
                  "Invalid token": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Placemarks",
        "description": "Lists all published placemarks by default. If a `state` query parameter is set, this endpoint will list all placemarks in the specified state.",
        "operationId": "listPlacemarks",
        "tags": [
          "placemarks",
          "localized"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "The pagination page. For example, if you paginate 1 to 42 per 10 and ask for the third page, you will get 31 to 40.",
            "required": true,
            "schema": {
              "description": "A pagination page number.",
              "type": "integer",
              "minimum": 1,
              "example": 3
            }
          },
          {
            "in": "query",
            "name": "per",
            "description": "The number of paginated items per page. For example, if you paginate 1 to 42 per 10 and ask for the third page, you will get 31 to 40.",
            "required": true,
            "schema": {
              "description": "The number of paginated items per page.",
              "type": "integer",
              "minimum": 1,
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "state",
            "description": "A state to filter placemarks. Default is 'published'.",
            "schema": {
              "description": "The state in which a placemark is.",
              "type": "string",
              "enum": [
                "unknown",
                "draft",
                "local",
                "private",
                "submitted",
                "published",
                "rejected"
              ]
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "description": "The results order. If not set, results won't be ordered.",
            "schema": {
              "description": "The order of the placemarks in an array:\n  * `last_created`: From the latest created placemark to the oldest one\n  * `first_created`: From the first created placemark to the latest one\n  * `last_published`: From the latest published placemark to the first one\n  * `first_published`: From the first published placemark to the last one\n**Note:** Creation date and publication date are very different: One could have created a placemark a while ago but published it just recently.",
              "type": "string",
              "enum": [
                "last_created",
                "first_created",
                "last_published",
                "first_published"
              ]
            }
          },
          {
            "in": "query",
            "name": "locale",
            "description": "The desired locale for response localization.",
            "schema": {
              "description": "A locale, as described in [Language and Locale IDs](https://tinyurl.com/apple-language-and-locale-ids).",
              "type": "string",
              "format": "locale",
              "minLength": 2,
              "default": "en",
              "example": "fr-FR"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A paginated array of placemarks.",
                  "type": "object",
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "description": "An array of placemarks.",
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "description": "A placemark, with minimum data for rendering on a map.",
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "latitude",
                          "longitude",
                          "kind",
                          "category",
                          "state",
                          "created_at",
                          "updated_at"
                        ],
                        "properties": {
                          "id": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "name": {
                            "description": "A placemark `name`.",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 48
                          },
                          "latitude": {
                            "description": "The latitude component of a coordinate.",
                            "type": "number",
                            "format": "double",
                            "minimum": -90,
                            "maximum": 90
                          },
                          "longitude": {
                            "description": "The longitude component of a coordinate.",
                            "type": "number",
                            "format": "double",
                            "minimum": -180,
                            "maximum": 180
                          },
                          "kind": {
                            "description": "A placemark kind `ID`.",
                            "type": "string",
                            "pattern": "^(?:[a-z0-9]+_)*[a-z0-9]+$"
                          },
                          "category": {
                            "description": "A placemark category `ID`.",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "spot",
                              "facility",
                              "misc"
                            ]
                          },
                          "state": {
                            "description": "The state in which a placemark is.",
                            "type": "string",
                            "enum": [
                              "unknown",
                              "draft",
                              "local",
                              "private",
                              "submitted",
                              "published",
                              "rejected"
                            ]
                          },
                          "created_at": {
                            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-07-21T17:32:28.000Z"
                          },
                          "updated_at": {
                            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-07-21T17:32:28.000Z"
                          }
                        },
                        "example": {
                          "summary": "Example spot",
                          "value": {
                            "id": "4f9058b3-3f8f-4b10-b3c0-e28c654012e4",
                            "name": "Espace de street workout Vincent Gâche",
                            "latitude": 47.207423,
                            "longitude": -1.547817,
                            "kind": {
                              "id": "calisthenics_park",
                              "title": "Parc de street workout",
                              "locale": "fr-FR"
                            },
                            "category": {
                              "id": "spot",
                              "title": "Spot",
                              "locale": "fr-FR"
                            },
                            "state": "published",
                            "created_at": "2020-12-02T01:43:52.285Z",
                            "updated_at": "2020-12-22T22:26:11.618Z"
                          }
                        }
                      },
                      "example": [
                        {
                          "$ref": "#/components/examples/Spot1"
                        },
                        {
                          "$ref": "#/components/examples/Spot2"
                        }
                      ]
                    },
                    "metadata": {
                      "description": "Metadata about the response's pagination.",
                      "type": "object",
                      "required": [
                        "page",
                        "per",
                        "total"
                      ],
                      "properties": {
                        "page": {
                          "description": "A pagination page number.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 3
                        },
                        "per": {
                          "description": "The number of paginated items per page.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "total": {
                          "description": "The total count of elements in a paginated result. It represents the total in all pages, and **does not** depend on the number of items per page.",
                          "type": "integer",
                          "minimum": 0,
                          "example": 42
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid state query param": {
                    "value": {
                      "error": true,
                      "reason": "Cannot initialize State from invalid String value lorem_ipsum for key state"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "No auth provided": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  },
                  "Invalid auth type": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  },
                  "Invalid token": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Private state": {
                    "value": {
                      "error": true,
                      "reason": "You cannot list private placemarks without being authenticated"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/placemarks/v1/{placemarkId}": {
      "get": {
        "summary": "Get Placemark",
        "description": "Gets a placemark's details.",
        "operationId": "getPlacemark",
        "tags": [
          "placemarks",
          "localized"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "placemarkId",
            "description": "A placemark `ID`.",
            "required": true,
            "schema": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            }
          },
          {
            "in": "query",
            "name": "locale",
            "description": "The desired locale for response localization.",
            "schema": {
              "description": "A locale, as described in [Language and Locale IDs](https://tinyurl.com/apple-language-and-locale-ids).",
              "type": "string",
              "format": "locale",
              "minLength": 2,
              "default": "en",
              "example": "fr-FR"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "description": "GeoJSON 'Feature' object",
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc7946#section-3.2"
                  },
                  "allOf": [
                    {
                      "externalDocs": {
                        "url": "https://tools.ietf.org/html/rfc7946#section-3"
                      },
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "discriminator": {
                        "propertyName": "type"
                      },
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "Feature",
                            "FeatureCollection",
                            "Point",
                            "MultiPoint",
                            "LineString",
                            "MultiLineString",
                            "Polygon",
                            "MultiPolygon",
                            "GeometryCollection"
                          ]
                        },
                        "bbox": {
                          "type": "array",
                          "minItems": 4,
                          "items": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "geometry",
                        "properties"
                      ],
                      "properties": {
                        "geometry": {
                          "allOf": [
                            {
                              "nullable": true
                            },
                            {
                              "externalDocs": {
                                "url": "https://tools.ietf.org/html/rfc7946#section-3"
                              },
                              "allOf": [
                                {
                                  "externalDocs": {
                                    "url": "https://tools.ietf.org/html/rfc7946#section-3"
                                  },
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "discriminator": {
                                    "propertyName": "type"
                                  },
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Feature",
                                        "FeatureCollection",
                                        "Point",
                                        "MultiPoint",
                                        "LineString",
                                        "MultiLineString",
                                        "Polygon",
                                        "MultiPolygon",
                                        "GeometryCollection"
                                      ]
                                    },
                                    "bbox": {
                                      "type": "array",
                                      "minItems": 4,
                                      "items": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "discriminator": {
                                    "propertyName": "type"
                                  },
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "Point",
                                        "MultiPoint",
                                        "LineString",
                                        "MultiLineString",
                                        "Polygon",
                                        "MultiPolygon",
                                        "GeometryCollection"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        "properties": {
                          "type": "object",
                          "nullable": true
                        },
                        "id": {
                          "oneOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "string"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Placemark not found": {
                    "value": {
                      "error": true,
                      "reason": "Placemark not found."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Placemark",
        "description": "Deletes a placemark.",
        "operationId": "deletePlacemark",
        "tags": [
          "placemarks"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "placemarkId",
            "description": "A placemark `ID`.",
            "required": true,
            "schema": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "No auth provided": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  },
                  "Invalid auth type": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  },
                  "Invalid token": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Not your placemark": {
                    "description": "You cannot delete someone else's placemark.",
                    "value": {
                      "error": true,
                      "reason": "You cannot delete someone else's placemark!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Placemark not found": {
                    "value": {
                      "error": true,
                      "reason": "Placemark not found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/placemarks/v1/{placemarkId}/submit": {
      "post": {
        "summary": "Submit Placemark",
        "description": "Submits a placemark.",
        "operationId": "submitPlacemark",
        "tags": [
          "placemarks",
          "placemark-submission"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "placemarkId",
            "description": "A placemark `ID`.",
            "required": true,
            "schema": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Submitted",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A report about a placemark submission.",
                  "type": "object",
                  "required": [
                    "id",
                    "placemark",
                    "state",
                    "reviews",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "description": "A `UUID` (or `GUID`).",
                      "type": "string",
                      "format": "uuid",
                      "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                    },
                    "placemark": {
                      "description": "A `UUID` (or `GUID`).",
                      "type": "string",
                      "format": "uuid",
                      "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                    },
                    "state": {
                      "description": "The state of a placemark submission.",
                      "type": "string",
                      "enum": [
                        "waiting_for_reviews",
                        "needs_changes",
                        "waiting_for_changes",
                        "accepted",
                        "rejected",
                        "moderated"
                      ]
                    },
                    "reviews": {
                      "description": "An array of placemark submission reviews.",
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "description": "A placemark submission review.",
                        "type": "object",
                        "required": [
                          "id",
                          "placemark",
                          "reviewer",
                          "opinion",
                          "comment",
                          "created_at"
                        ],
                        "properties": {
                          "id": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "placemark": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "reviewer": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "opinion": {
                            "description": "A user's opinion in a submission review.",
                            "type": "string",
                            "enum": [
                              "positive",
                              "needs_changes",
                              "negative"
                            ]
                          },
                          "comment": {
                            "description": "A review comment. Possibly empty.",
                            "type": "string",
                            "example": "Great spot, very diverse! I like to go there for long training sessions."
                          },
                          "issues": {
                            "description": "An array of placemark issues.",
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "description": "A placemark issue.",
                              "type": "object",
                              "required": [
                                "id",
                                "placemark",
                                "issuer",
                                "reason",
                                "comment",
                                "state",
                                "created_at"
                              ],
                              "properties": {
                                "id": {
                                  "description": "A `UUID` (or `GUID`).",
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                                },
                                "placemark": {
                                  "description": "A `UUID` (or `GUID`).",
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                                },
                                "issuer": {
                                  "description": "A `UUID` (or `GUID`).",
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                                },
                                "reason": {
                                  "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                                  "type": "string",
                                  "enum": [
                                    "name",
                                    "location",
                                    "type",
                                    "caption",
                                    "satellite_image",
                                    "images",
                                    "address",
                                    "properties",
                                    "other"
                                  ]
                                },
                                "comment": {
                                  "description": "A comment in a placemark issue.",
                                  "type": "string",
                                  "minLength": 4,
                                  "example": "There is no tree on this spot!"
                                },
                                "state": {
                                  "description": "The state of a placemark issue.",
                                  "type": "string",
                                  "enum": [
                                    "submitted",
                                    "addressed",
                                    "denied"
                                  ]
                                },
                                "created_at": {
                                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2017-07-21T17:32:28.000Z"
                                }
                              },
                              "example": {
                                "summary": "Example placemark issue",
                                "value": {
                                  "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                                  "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                                  "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                                  "reason": "type",
                                  "comment": "This is not a training spot, it is a parkour facility!",
                                  "state": "addressed",
                                  "created_at": "2020-08-15T17:01:33.818Z"
                                }
                              }
                            },
                            "example": [
                              {
                                "$ref": "#/components/examples/PlacemarkIssue1"
                              },
                              {
                                "$ref": "#/components/examples/PlacemarkIssue2"
                              }
                            ]
                          },
                          "moderated": {
                            "description": "A flag saying something has been moderated.",
                            "type": "boolean",
                            "example": true
                          },
                          "created_at": {
                            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-07-21T17:32:28.000Z"
                          }
                        },
                        "example": {
                          "summary": "Example placemark submission review",
                          "value": {
                            "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
                            "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
                            "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
                            "opinion": "positive",
                            "comment": "",
                            "created_at": "2020-09-23T07:46:57.524Z"
                          }
                        }
                      },
                      "example": [
                        {
                          "$ref": "#/components/examples/PlacemarkSubmissionReview1"
                        },
                        {
                          "$ref": "#/components/examples/PlacemarkSubmissionReview2"
                        }
                      ]
                    },
                    "created_at": {
                      "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-07-21T17:32:28.000Z"
                    },
                    "updated_at": {
                      "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-07-21T17:32:28.000Z"
                    }
                  },
                  "example": {
                    "summary": "Example placemark submission report",
                    "value": {
                      "id": "24ffb61e-ad56-4244-bbd5-673944e74116",
                      "placemark": "6af987db-b1f9-4f9d-ab2e-c330b4ec78bd",
                      "reviews": [
                        {
                          "$ref": "#/components/examples/PlacemarkSubmissionReview1"
                        },
                        {
                          "$ref": "#/components/examples/PlacemarkSubmissionReview2"
                        }
                      ],
                      "created_at": "2020-09-23T07:46:57.524Z",
                      "updated_at": "2020-10-05T09:23:21.836Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "No auth provided": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  },
                  "Invalid auth type": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  },
                  "Invalid token": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Not your placemark": {
                    "description": "You cannot submit someone else's placemark.",
                    "value": {
                      "error": true,
                      "reason": "You cannot submit someone else's placemark!"
                    }
                  },
                  "Already submitted": {
                    "description": "You cannot submit a placemark twice.",
                    "value": {
                      "error": true,
                      "reason": "You cannot submit a placemark twice!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Placemark not found": {
                    "value": {
                      "error": true,
                      "reason": "Placemark not found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/placemarks/v1/{placemarkId}/submission": {
      "get": {
        "summary": "Get Placemark Submission Report",
        "description": "Get a placemark's submission report.",
        "operationId": "getPlacemarkSubmissionReport",
        "tags": [
          "placemarks",
          "placemark-submission"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "placemarkId",
            "description": "A placemark `ID`.",
            "required": true,
            "schema": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A report about a placemark submission.",
                  "type": "object",
                  "required": [
                    "id",
                    "placemark",
                    "state",
                    "reviews",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "description": "A `UUID` (or `GUID`).",
                      "type": "string",
                      "format": "uuid",
                      "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                    },
                    "placemark": {
                      "description": "A `UUID` (or `GUID`).",
                      "type": "string",
                      "format": "uuid",
                      "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                    },
                    "state": {
                      "description": "The state of a placemark submission.",
                      "type": "string",
                      "enum": [
                        "waiting_for_reviews",
                        "needs_changes",
                        "waiting_for_changes",
                        "accepted",
                        "rejected",
                        "moderated"
                      ]
                    },
                    "reviews": {
                      "description": "An array of placemark submission reviews.",
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "description": "A placemark submission review.",
                        "type": "object",
                        "required": [
                          "id",
                          "placemark",
                          "reviewer",
                          "opinion",
                          "comment",
                          "created_at"
                        ],
                        "properties": {
                          "id": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "placemark": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "reviewer": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "opinion": {
                            "description": "A user's opinion in a submission review.",
                            "type": "string",
                            "enum": [
                              "positive",
                              "needs_changes",
                              "negative"
                            ]
                          },
                          "comment": {
                            "description": "A review comment. Possibly empty.",
                            "type": "string",
                            "example": "Great spot, very diverse! I like to go there for long training sessions."
                          },
                          "issues": {
                            "description": "An array of placemark issues.",
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "description": "A placemark issue.",
                              "type": "object",
                              "required": [
                                "id",
                                "placemark",
                                "issuer",
                                "reason",
                                "comment",
                                "state",
                                "created_at"
                              ],
                              "properties": {
                                "id": {
                                  "description": "A `UUID` (or `GUID`).",
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                                },
                                "placemark": {
                                  "description": "A `UUID` (or `GUID`).",
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                                },
                                "issuer": {
                                  "description": "A `UUID` (or `GUID`).",
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                                },
                                "reason": {
                                  "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                                  "type": "string",
                                  "enum": [
                                    "name",
                                    "location",
                                    "type",
                                    "caption",
                                    "satellite_image",
                                    "images",
                                    "address",
                                    "properties",
                                    "other"
                                  ]
                                },
                                "comment": {
                                  "description": "A comment in a placemark issue.",
                                  "type": "string",
                                  "minLength": 4,
                                  "example": "There is no tree on this spot!"
                                },
                                "state": {
                                  "description": "The state of a placemark issue.",
                                  "type": "string",
                                  "enum": [
                                    "submitted",
                                    "addressed",
                                    "denied"
                                  ]
                                },
                                "created_at": {
                                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2017-07-21T17:32:28.000Z"
                                }
                              },
                              "example": {
                                "summary": "Example placemark issue",
                                "value": {
                                  "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                                  "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                                  "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                                  "reason": "type",
                                  "comment": "This is not a training spot, it is a parkour facility!",
                                  "state": "addressed",
                                  "created_at": "2020-08-15T17:01:33.818Z"
                                }
                              }
                            },
                            "example": [
                              {
                                "$ref": "#/components/examples/PlacemarkIssue1"
                              },
                              {
                                "$ref": "#/components/examples/PlacemarkIssue2"
                              }
                            ]
                          },
                          "moderated": {
                            "description": "A flag saying something has been moderated.",
                            "type": "boolean",
                            "example": true
                          },
                          "created_at": {
                            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-07-21T17:32:28.000Z"
                          }
                        },
                        "example": {
                          "summary": "Example placemark submission review",
                          "value": {
                            "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
                            "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
                            "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
                            "opinion": "positive",
                            "comment": "",
                            "created_at": "2020-09-23T07:46:57.524Z"
                          }
                        }
                      },
                      "example": [
                        {
                          "$ref": "#/components/examples/PlacemarkSubmissionReview1"
                        },
                        {
                          "$ref": "#/components/examples/PlacemarkSubmissionReview2"
                        }
                      ]
                    },
                    "created_at": {
                      "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-07-21T17:32:28.000Z"
                    },
                    "updated_at": {
                      "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-07-21T17:32:28.000Z"
                    }
                  },
                  "example": {
                    "summary": "Example placemark submission report",
                    "value": {
                      "id": "24ffb61e-ad56-4244-bbd5-673944e74116",
                      "placemark": "6af987db-b1f9-4f9d-ab2e-c330b4ec78bd",
                      "reviews": [
                        {
                          "$ref": "#/components/examples/PlacemarkSubmissionReview1"
                        },
                        {
                          "$ref": "#/components/examples/PlacemarkSubmissionReview2"
                        }
                      ],
                      "created_at": "2020-09-23T07:46:57.524Z",
                      "updated_at": "2020-10-05T09:23:21.836Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Placemark not found": {
                    "value": {
                      "error": true,
                      "reason": "Placemark not found."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Placemark not submitted": {
                    "value": {
                      "error": true,
                      "reason": "Placemark not submitted."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/placemarks/v1/{placemarkId}/submission/reviews": {
      "post": {
        "summary": "Add Placemark Submission Review",
        "description": "Adds a submission review to a placemark.",
        "operationId": "addPlacemarkSubmissionReview",
        "tags": [
          "placemarks",
          "placemark-submission"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "placemarkId",
            "description": "A placemark `ID`.",
            "required": true,
            "schema": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "An object with data required to create a new placemark submission review.",
                "type": "object",
                "required": [
                  "opinion",
                  "comment"
                ],
                "properties": {
                  "opinion": {
                    "description": "A user's opinion in a submission review.",
                    "type": "string",
                    "enum": [
                      "positive",
                      "needs_changes",
                      "negative"
                    ]
                  },
                  "comment": {
                    "description": "A review comment. Possibly empty.",
                    "type": "string",
                    "example": "Great spot, very diverse! I like to go there for long training sessions."
                  },
                  "issues": {
                    "description": "An array of placemark issues.",
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "description": "A placemark issue.",
                      "type": "object",
                      "required": [
                        "id",
                        "placemark",
                        "issuer",
                        "reason",
                        "comment",
                        "state",
                        "created_at"
                      ],
                      "properties": {
                        "id": {
                          "description": "A `UUID` (or `GUID`).",
                          "type": "string",
                          "format": "uuid",
                          "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                        },
                        "placemark": {
                          "description": "A `UUID` (or `GUID`).",
                          "type": "string",
                          "format": "uuid",
                          "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                        },
                        "issuer": {
                          "description": "A `UUID` (or `GUID`).",
                          "type": "string",
                          "format": "uuid",
                          "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                        },
                        "reason": {
                          "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                          "type": "string",
                          "enum": [
                            "name",
                            "location",
                            "type",
                            "caption",
                            "satellite_image",
                            "images",
                            "address",
                            "properties",
                            "other"
                          ]
                        },
                        "comment": {
                          "description": "A comment in a placemark issue.",
                          "type": "string",
                          "minLength": 4,
                          "example": "There is no tree on this spot!"
                        },
                        "state": {
                          "description": "The state of a placemark issue.",
                          "type": "string",
                          "enum": [
                            "submitted",
                            "addressed",
                            "denied"
                          ]
                        },
                        "created_at": {
                          "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                          "type": "string",
                          "format": "date-time",
                          "example": "2017-07-21T17:32:28.000Z"
                        }
                      },
                      "example": {
                        "summary": "Example placemark issue",
                        "value": {
                          "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                          "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                          "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                          "reason": "type",
                          "comment": "This is not a training spot, it is a parkour facility!",
                          "state": "addressed",
                          "created_at": "2020-08-15T17:01:33.818Z"
                        }
                      }
                    },
                    "example": [
                      {
                        "$ref": "#/components/examples/PlacemarkIssue1"
                      },
                      {
                        "$ref": "#/components/examples/PlacemarkIssue2"
                      }
                    ]
                  },
                  "moderated": {
                    "description": "A flag saying something has been moderated.",
                    "type": "boolean",
                    "example": true
                  }
                },
                "example": {
                  "summary": "Example placemark submission review creation",
                  "value": {
                    "opinion": "positive",
                    "comment": "Everything looks good."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A placemark submission review.",
                  "type": "object",
                  "required": [
                    "id",
                    "placemark",
                    "reviewer",
                    "opinion",
                    "comment",
                    "created_at"
                  ],
                  "properties": {
                    "id": {
                      "description": "A `UUID` (or `GUID`).",
                      "type": "string",
                      "format": "uuid",
                      "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                    },
                    "placemark": {
                      "description": "A `UUID` (or `GUID`).",
                      "type": "string",
                      "format": "uuid",
                      "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                    },
                    "reviewer": {
                      "description": "A `UUID` (or `GUID`).",
                      "type": "string",
                      "format": "uuid",
                      "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                    },
                    "opinion": {
                      "description": "A user's opinion in a submission review.",
                      "type": "string",
                      "enum": [
                        "positive",
                        "needs_changes",
                        "negative"
                      ]
                    },
                    "comment": {
                      "description": "A review comment. Possibly empty.",
                      "type": "string",
                      "example": "Great spot, very diverse! I like to go there for long training sessions."
                    },
                    "issues": {
                      "description": "An array of placemark issues.",
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "description": "A placemark issue.",
                        "type": "object",
                        "required": [
                          "id",
                          "placemark",
                          "issuer",
                          "reason",
                          "comment",
                          "state",
                          "created_at"
                        ],
                        "properties": {
                          "id": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "placemark": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "issuer": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "reason": {
                            "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                            "type": "string",
                            "enum": [
                              "name",
                              "location",
                              "type",
                              "caption",
                              "satellite_image",
                              "images",
                              "address",
                              "properties",
                              "other"
                            ]
                          },
                          "comment": {
                            "description": "A comment in a placemark issue.",
                            "type": "string",
                            "minLength": 4,
                            "example": "There is no tree on this spot!"
                          },
                          "state": {
                            "description": "The state of a placemark issue.",
                            "type": "string",
                            "enum": [
                              "submitted",
                              "addressed",
                              "denied"
                            ]
                          },
                          "created_at": {
                            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-07-21T17:32:28.000Z"
                          }
                        },
                        "example": {
                          "summary": "Example placemark issue",
                          "value": {
                            "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                            "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                            "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                            "reason": "type",
                            "comment": "This is not a training spot, it is a parkour facility!",
                            "state": "addressed",
                            "created_at": "2020-08-15T17:01:33.818Z"
                          }
                        }
                      },
                      "example": [
                        {
                          "$ref": "#/components/examples/PlacemarkIssue1"
                        },
                        {
                          "$ref": "#/components/examples/PlacemarkIssue2"
                        }
                      ]
                    },
                    "moderated": {
                      "description": "A flag saying something has been moderated.",
                      "type": "boolean",
                      "example": true
                    },
                    "created_at": {
                      "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-07-21T17:32:28.000Z"
                    }
                  },
                  "example": {
                    "summary": "Example placemark submission review",
                    "value": {
                      "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
                      "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
                      "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
                      "opinion": "positive",
                      "comment": "",
                      "created_at": "2020-09-23T07:46:57.524Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "No auth provided": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  },
                  "Invalid auth type": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  },
                  "Invalid token": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Placemark not found": {
                    "description": "Cannot use `moderated` flag.",
                    "value": {
                      "error": true,
                      "reason": "You need to be a moderator in order to use the `moderated` flag."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Placemark not found": {
                    "value": {
                      "error": true,
                      "reason": "Placemark not found."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Placemark not submitted": {
                    "value": {
                      "error": true,
                      "reason": "Placemark not submitted."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Placemark Submission Reviews",
        "description": "Lists a placemark's submission reviews.",
        "operationId": "listPlacemarkSubmissionReviews",
        "tags": [
          "placemarks",
          "placemark-submission"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "placemarkId",
            "description": "A placemark `ID`.",
            "required": true,
            "schema": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The pagination page. For example, if you paginate 1 to 42 per 10 and ask for the third page, you will get 31 to 40.",
            "required": true,
            "schema": {
              "description": "A pagination page number.",
              "type": "integer",
              "minimum": 1,
              "example": 3
            }
          },
          {
            "in": "query",
            "name": "per",
            "description": "The number of paginated items per page. For example, if you paginate 1 to 42 per 10 and ask for the third page, you will get 31 to 40.",
            "required": true,
            "schema": {
              "description": "The number of paginated items per page.",
              "type": "integer",
              "minimum": 1,
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "opinion",
            "description": "An opinion to filter placemark submission reviews. If not set, results won't be filtered.",
            "schema": {
              "description": "A user's opinion in a submission review.",
              "type": "string",
              "enum": [
                "positive",
                "needs_changes",
                "negative"
              ]
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "description": "The results order. If not set, results won't be ordered.",
            "schema": {
              "description": "The order of the placemark submission reviews in an array:\n  * `last_created`: From the latest created review to the oldest one\n  * `first_created`: From the first created review to the latest one",
              "type": "string",
              "enum": [
                "last_created",
                "first_created"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A paginated array of placemark submission reviews.",
                  "type": "object",
                  "required": [
                    "items",
                    "metadata"
                  ],
                  "properties": {
                    "items": {
                      "description": "An array of placemark submission reviews.",
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "description": "A placemark submission review.",
                        "type": "object",
                        "required": [
                          "id",
                          "placemark",
                          "reviewer",
                          "opinion",
                          "comment",
                          "created_at"
                        ],
                        "properties": {
                          "id": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "placemark": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "reviewer": {
                            "description": "A `UUID` (or `GUID`).",
                            "type": "string",
                            "format": "uuid",
                            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                          },
                          "opinion": {
                            "description": "A user's opinion in a submission review.",
                            "type": "string",
                            "enum": [
                              "positive",
                              "needs_changes",
                              "negative"
                            ]
                          },
                          "comment": {
                            "description": "A review comment. Possibly empty.",
                            "type": "string",
                            "example": "Great spot, very diverse! I like to go there for long training sessions."
                          },
                          "issues": {
                            "description": "An array of placemark issues.",
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "description": "A placemark issue.",
                              "type": "object",
                              "required": [
                                "id",
                                "placemark",
                                "issuer",
                                "reason",
                                "comment",
                                "state",
                                "created_at"
                              ],
                              "properties": {
                                "id": {
                                  "description": "A `UUID` (or `GUID`).",
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                                },
                                "placemark": {
                                  "description": "A `UUID` (or `GUID`).",
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                                },
                                "issuer": {
                                  "description": "A `UUID` (or `GUID`).",
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                                },
                                "reason": {
                                  "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                                  "type": "string",
                                  "enum": [
                                    "name",
                                    "location",
                                    "type",
                                    "caption",
                                    "satellite_image",
                                    "images",
                                    "address",
                                    "properties",
                                    "other"
                                  ]
                                },
                                "comment": {
                                  "description": "A comment in a placemark issue.",
                                  "type": "string",
                                  "minLength": 4,
                                  "example": "There is no tree on this spot!"
                                },
                                "state": {
                                  "description": "The state of a placemark issue.",
                                  "type": "string",
                                  "enum": [
                                    "submitted",
                                    "addressed",
                                    "denied"
                                  ]
                                },
                                "created_at": {
                                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2017-07-21T17:32:28.000Z"
                                }
                              },
                              "example": {
                                "summary": "Example placemark issue",
                                "value": {
                                  "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                                  "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                                  "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                                  "reason": "type",
                                  "comment": "This is not a training spot, it is a parkour facility!",
                                  "state": "addressed",
                                  "created_at": "2020-08-15T17:01:33.818Z"
                                }
                              }
                            },
                            "example": [
                              {
                                "$ref": "#/components/examples/PlacemarkIssue1"
                              },
                              {
                                "$ref": "#/components/examples/PlacemarkIssue2"
                              }
                            ]
                          },
                          "moderated": {
                            "description": "A flag saying something has been moderated.",
                            "type": "boolean",
                            "example": true
                          },
                          "created_at": {
                            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                            "type": "string",
                            "format": "date-time",
                            "example": "2017-07-21T17:32:28.000Z"
                          }
                        },
                        "example": {
                          "summary": "Example placemark submission review",
                          "value": {
                            "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
                            "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
                            "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
                            "opinion": "positive",
                            "comment": "",
                            "created_at": "2020-09-23T07:46:57.524Z"
                          }
                        }
                      },
                      "example": [
                        {
                          "$ref": "#/components/examples/PlacemarkSubmissionReview1"
                        },
                        {
                          "$ref": "#/components/examples/PlacemarkSubmissionReview2"
                        }
                      ]
                    },
                    "metadata": {
                      "description": "Metadata about the response's pagination.",
                      "type": "object",
                      "required": [
                        "page",
                        "per",
                        "total"
                      ],
                      "properties": {
                        "page": {
                          "description": "A pagination page number.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 3
                        },
                        "per": {
                          "description": "The number of paginated items per page.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "total": {
                          "description": "The total count of elements in a paginated result. It represents the total in all pages, and **does not** depend on the number of items per page.",
                          "type": "integer",
                          "minimum": 0,
                          "example": 42
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "No auth provided": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  },
                  "Invalid auth type": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  },
                  "Invalid token": {
                    "value": {
                      "error": true,
                      "reason": "Invalid authorization token."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Placemark not found": {
                    "value": {
                      "error": true,
                      "reason": "Placemark not found."
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Placemark not submitted": {
                    "value": {
                      "error": true,
                      "reason": "Placemark not submitted."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/placemarks/v1/properties": {
      "get": {
        "summary": "List Available Placemark Properties",
        "description": "Lists available placemark properties by kind.",
        "operationId": "listPlacemarkProperties",
        "tags": [
          "placemarks",
          "localized"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "kind",
            "description": "A kind to filter properties.",
            "required": true,
            "schema": {
              "description": "A placemark property `ID`.",
              "type": "string",
              "enum": [
                "feature",
                "technique",
                "benefit",
                "hazard"
              ]
            }
          },
          {
            "in": "query",
            "name": "locale",
            "description": "The desired locale for response localization.",
            "schema": {
              "description": "A locale, as described in [Language and Locale IDs](https://tinyurl.com/apple-language-and-locale-ids).",
              "type": "string",
              "format": "locale",
              "minLength": 2,
              "default": "en",
              "example": "fr-FR"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of placemark properties.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "description": "A localized placemark property.",
                    "type": "object",
                    "required": [
                      "id",
                      "title",
                      "kind"
                    ],
                    "properties": {
                      "id": {
                        "description": "A placemark property `ID`.",
                        "type": "string",
                        "pattern": "^(?:[a-z0-9]+\\+?_)*[a-z0-9]+$"
                      },
                      "title": {
                        "description": "A localized `title`.",
                        "type": "string",
                        "minLength": 1
                      },
                      "kind": {
                        "description": "A placemark property `ID`.",
                        "type": "string",
                        "enum": [
                          "feature",
                          "technique",
                          "benefit",
                          "hazard"
                        ]
                      }
                    },
                    "example": {
                      "summary": "Example placemark feature",
                      "value": {
                        "id": "grass",
                        "title": "Herbe",
                        "locale": "fr-FR"
                      }
                    }
                  },
                  "example": [
                    {
                      "$ref": "#/components/examples/Feature1"
                    },
                    {
                      "$ref": "#/components/examples/Feature2"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An error thrown by an API.",
                  "type": "object",
                  "required": [
                    "error",
                    "reason"
                  ],
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "reason": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid property kind": {
                    "value": {
                      "error": true,
                      "reason": "Invalid property kind: \"lorem\""
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "User.Username": {
        "description": "A username (`@`).",
        "type": "string",
        "minLength": 3,
        "maxLength": 32,
        "pattern": "^[a-z0-9._]{3,32}$",
        "example": "lorem_ipsum"
      },
      "User.DisplayName": {
        "description": "A user display name.",
        "type": "string",
        "example": "Lorem Ipsum"
      },
      "User.Country": {
        "description": "The country of a user. Will generally show as a flag next to the user's display name.",
        "type": "string",
        "example": "FR"
      },
      "User.Kind": {
        "description": "The kind of a user. Either a regular user or a bot.",
        "type": "string",
        "enum": [
          "user",
          "bot"
        ],
        "default": "user"
      },
      "User.Bio": {
        "description": "A user's bio (profile description).",
        "type": "string"
      },
      "User.Location": {
        "description": "A user's location. It's not formatted nor checked as an existing place, so it could be anything.",
        "type": "string"
      },
      "User.Experience": {
        "type": "object"
      },
      "User.SocialUsernames": {
        "type": "object"
      },
      "User.Public.Small": {
        "description": "Public informations about a user (only required ones).",
        "type": "object",
        "required": [
          "id",
          "username",
          "display_name",
          "kind",
          "updated_at"
        ],
        "properties": {
          "id": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "username": {
            "description": "A username (`@`).",
            "type": "string",
            "minLength": 3,
            "maxLength": 32,
            "pattern": "^[a-z0-9._]{3,32}$",
            "example": "lorem_ipsum"
          },
          "display_name": {
            "description": "A user display name.",
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "country": {
            "description": "The country of a user. Will generally show as a flag next to the user's display name.",
            "type": "string",
            "example": "FR"
          },
          "kind": {
            "description": "The kind of a user. Either a regular user or a bot.",
            "type": "string",
            "enum": [
              "user",
              "bot"
            ],
            "default": "user"
          },
          "updated_at": {
            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          }
        }
      },
      "User.Details": {
        "description": "Details about a user.",
        "type": "object",
        "required": [
          "experience",
          "social_usernames",
          "created_at"
        ],
        "properties": {
          "bio": {
            "description": "A user's bio (profile description).",
            "type": "string"
          },
          "location": {
            "description": "A user's location. It's not formatted nor checked as an existing place, so it could be anything.",
            "type": "string"
          },
          "experience": {
            "type": "object"
          },
          "social_usernames": {
            "type": "object"
          }
        }
      },
      "User.Public.Full": {
        "description": "Public informations about a user (including all details).",
        "type": "object",
        "required": [
          "id",
          "username",
          "display_name",
          "kind",
          "updated_at",
          "details"
        ],
        "properties": {
          "id": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "username": {
            "description": "A username (`@`).",
            "type": "string",
            "minLength": 3,
            "maxLength": 32,
            "pattern": "^[a-z0-9._]{3,32}$",
            "example": "lorem_ipsum"
          },
          "display_name": {
            "description": "A user display name.",
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "country": {
            "description": "The country of a user. Will generally show as a flag next to the user's display name.",
            "type": "string",
            "example": "FR"
          },
          "kind": {
            "description": "The kind of a user. Either a regular user or a bot.",
            "type": "string",
            "enum": [
              "user",
              "bot"
            ],
            "default": "user"
          },
          "updated_at": {
            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "details": {
            "description": "Details about a user.",
            "type": "object",
            "required": [
              "experience",
              "social_usernames",
              "created_at"
            ],
            "properties": {
              "bio": {
                "description": "A user's bio (profile description).",
                "type": "string"
              },
              "location": {
                "description": "A user's location. It's not formatted nor checked as an existing place, so it could be anything.",
                "type": "string"
              },
              "experience": {
                "type": "object"
              },
              "social_usernames": {
                "type": "object"
              }
            }
          }
        }
      },
      "User.Private": {
        "description": "Private details about a user.",
        "type": "object",
        "required": [
          "id",
          "username",
          "display_name",
          "kind",
          "updated_at",
          "details",
          "email"
        ],
        "properties": {
          "id": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "username": {
            "description": "A username (`@`).",
            "type": "string",
            "minLength": 3,
            "maxLength": 32,
            "pattern": "^[a-z0-9._]{3,32}$",
            "example": "lorem_ipsum"
          },
          "display_name": {
            "description": "A user display name.",
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "country": {
            "description": "The country of a user. Will generally show as a flag next to the user's display name.",
            "type": "string",
            "example": "FR"
          },
          "kind": {
            "description": "The kind of a user. Either a regular user or a bot.",
            "type": "string",
            "enum": [
              "user",
              "bot"
            ],
            "default": "user"
          },
          "updated_at": {
            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "details": {
            "description": "Details about a user.",
            "type": "object",
            "required": [
              "experience",
              "social_usernames",
              "created_at"
            ],
            "properties": {
              "bio": {
                "description": "A user's bio (profile description).",
                "type": "string"
              },
              "location": {
                "description": "A user's location. It's not formatted nor checked as an existing place, so it could be anything.",
                "type": "string"
              },
              "experience": {
                "type": "object"
              },
              "social_usernames": {
                "type": "object"
              }
            }
          },
          "email": {
            "description": "An email address.",
            "type": "string",
            "format": "email"
          }
        }
      },
      "User.Create": {
        "type": "object",
        "required": [
          "username",
          "display_name",
          "email",
          "password",
          "confirm_password"
        ],
        "properties": {
          "username": {
            "description": "A username (`@`).",
            "type": "string",
            "minLength": 3,
            "maxLength": 32,
            "pattern": "^[a-z0-9._]{3,32}$",
            "example": "lorem_ipsum"
          },
          "display_name": {
            "description": "A user display name.",
            "type": "string",
            "example": "Lorem Ipsum"
          },
          "email": {
            "description": "An email address.",
            "type": "string",
            "format": "email"
          },
          "password": {
            "description": "A password.",
            "type": "string",
            "minLength": 8
          },
          "confirm_password": {
            "description": "A password.",
            "type": "string",
            "minLength": 8
          }
        },
        "example": {
          "username": "vapor",
          "display_name": "Vapor",
          "email": "test@vapor.codes",
          "password": "password",
          "confirm_password": "password"
        }
      },
      "ArrayOfUsers": {
        "description": "An array of users (without unnecessary details).",
        "type": "array",
        "items": {
          "description": "Public informations about a user (only required ones).",
          "type": "object",
          "required": [
            "id",
            "username",
            "display_name",
            "kind",
            "updated_at"
          ],
          "properties": {
            "id": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            },
            "username": {
              "description": "A username (`@`).",
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[a-z0-9._]{3,32}$",
              "example": "lorem_ipsum"
            },
            "display_name": {
              "description": "A user display name.",
              "type": "string",
              "example": "Lorem Ipsum"
            },
            "country": {
              "description": "The country of a user. Will generally show as a flag next to the user's display name.",
              "type": "string",
              "example": "FR"
            },
            "kind": {
              "description": "The kind of a user. Either a regular user or a bot.",
              "type": "string",
              "enum": [
                "user",
                "bot"
              ],
              "default": "user"
            },
            "updated_at": {
              "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
              "type": "string",
              "format": "date-time",
              "example": "2017-07-21T17:32:28.000Z"
            }
          }
        }
      },
      "UsersPage": {
        "description": "A paginated array of users.",
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "description": "An array of users (without unnecessary details).",
            "type": "array",
            "items": {
              "description": "Public informations about a user (only required ones).",
              "type": "object",
              "required": [
                "id",
                "username",
                "display_name",
                "kind",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "username": {
                  "description": "A username (`@`).",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 32,
                  "pattern": "^[a-z0-9._]{3,32}$",
                  "example": "lorem_ipsum"
                },
                "display_name": {
                  "description": "A user display name.",
                  "type": "string",
                  "example": "Lorem Ipsum"
                },
                "country": {
                  "description": "The country of a user. Will generally show as a flag next to the user's display name.",
                  "type": "string",
                  "example": "FR"
                },
                "kind": {
                  "description": "The kind of a user. Either a regular user or a bot.",
                  "type": "string",
                  "enum": [
                    "user",
                    "bot"
                  ],
                  "default": "user"
                },
                "updated_at": {
                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-07-21T17:32:28.000Z"
                }
              }
            }
          },
          "metadata": {
            "description": "Metadata about the response's pagination.",
            "type": "object",
            "required": [
              "page",
              "per",
              "total"
            ],
            "properties": {
              "page": {
                "description": "A pagination page number.",
                "type": "integer",
                "minimum": 1,
                "example": 3
              },
              "per": {
                "description": "The number of paginated items per page.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "total": {
                "description": "The total count of elements in a paginated result. It represents the total in all pages, and **does not** depend on the number of items per page.",
                "type": "integer",
                "minimum": 0,
                "example": 42
              }
            }
          }
        }
      },
      "UsersOrder": {
        "description": "The order of the users in an array:\n  * `last_joined`: From the latest created review to the oldest one\n  * `first_joined`: From the first created review to the latest one",
        "type": "string",
        "enum": [
          "last_joined",
          "first_joined"
        ]
      },
      "BearerToken": {
        "description": "A Bearer token.",
        "type": "string"
      },
      "Placemark.Category.ID": {
        "description": "A placemark category `ID`.",
        "type": "string",
        "enum": [
          "unknown",
          "spot",
          "facility",
          "misc"
        ]
      },
      "Placemark.Kind.ID": {
        "description": "A placemark kind `ID`.",
        "type": "string",
        "pattern": "^(?:[a-z0-9]+_)*[a-z0-9]+$"
      },
      "Placemark.State": {
        "description": "The state in which a placemark is.",
        "type": "string",
        "enum": [
          "unknown",
          "draft",
          "local",
          "private",
          "submitted",
          "published",
          "rejected"
        ]
      },
      "Placemark.Name": {
        "description": "A placemark `name`.",
        "type": "string",
        "minLength": 3,
        "maxLength": 48
      },
      "Placemark.Caption": {
        "description": "A placemark `caption`. Possibly empty.",
        "type": "string",
        "nullable": true
      },
      "Placemark.City": {
        "description": "The city in which a placemark is.",
        "type": "string",
        "minLength": 1
      },
      "Placemark.Country": {
        "description": "The country in which a placemark is.",
        "type": "string",
        "minLength": 1
      },
      "Placemark.Property.ID": {
        "description": "A placemark property `ID`.",
        "type": "string",
        "pattern": "^(?:[a-z0-9]+\\+?_)*[a-z0-9]+$"
      },
      "Placemark.Property.Kind": {
        "description": "A placemark property `ID`.",
        "type": "string",
        "enum": [
          "feature",
          "technique",
          "benefit",
          "hazard"
        ]
      },
      "Placemark.Issue": {
        "description": "A placemark issue.",
        "type": "object",
        "required": [
          "id",
          "placemark",
          "issuer",
          "reason",
          "comment",
          "state",
          "created_at"
        ],
        "properties": {
          "id": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "placemark": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "issuer": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "reason": {
            "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
            "type": "string",
            "enum": [
              "name",
              "location",
              "type",
              "caption",
              "satellite_image",
              "images",
              "address",
              "properties",
              "other"
            ]
          },
          "comment": {
            "description": "A comment in a placemark issue.",
            "type": "string",
            "minLength": 4,
            "example": "There is no tree on this spot!"
          },
          "state": {
            "description": "The state of a placemark issue.",
            "type": "string",
            "enum": [
              "submitted",
              "addressed",
              "denied"
            ]
          },
          "created_at": {
            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          }
        },
        "example": {
          "summary": "Example placemark issue",
          "value": {
            "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
            "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
            "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
            "reason": "type",
            "comment": "This is not a training spot, it is a parkour facility!",
            "state": "addressed",
            "created_at": "2020-08-15T17:01:33.818Z"
          }
        }
      },
      "Placemark.Issue.Comment": {
        "description": "A comment in a placemark issue.",
        "type": "string",
        "minLength": 4,
        "example": "There is no tree on this spot!"
      },
      "Placemark.Issue.Reason": {
        "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
        "type": "string",
        "enum": [
          "name",
          "location",
          "type",
          "caption",
          "satellite_image",
          "images",
          "address",
          "properties",
          "other"
        ]
      },
      "Placemark.Issue.State": {
        "description": "The state of a placemark issue.",
        "type": "string",
        "enum": [
          "submitted",
          "addressed",
          "denied"
        ]
      },
      "Placemark.Submission.State": {
        "description": "The state of a placemark submission.",
        "type": "string",
        "enum": [
          "waiting_for_reviews",
          "needs_changes",
          "waiting_for_changes",
          "accepted",
          "rejected",
          "moderated"
        ]
      },
      "Placemark.Submission.Review.Opinion": {
        "description": "A user's opinion in a submission review.",
        "type": "string",
        "enum": [
          "positive",
          "needs_changes",
          "negative"
        ]
      },
      "Placemark.Category.Localized": {
        "description": "A localized placemark `category`.",
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "description": "A placemark category `ID`.",
            "type": "string",
            "enum": [
              "unknown",
              "spot",
              "facility",
              "misc"
            ]
          },
          "title": {
            "description": "A localized `title`.",
            "type": "string",
            "minLength": 1
          }
        },
        "example": {
          "id": "facility",
          "title": "Salle"
        }
      },
      "Placemark.Kind.Localized": {
        "description": "A localized placemark `kind`.",
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "description": "A placemark kind `ID`.",
            "type": "string",
            "pattern": "^(?:[a-z0-9]+_)*[a-z0-9]+$"
          },
          "title": {
            "description": "A localized `title`.",
            "type": "string",
            "minLength": 1
          }
        },
        "example": {
          "id": "training_spot",
          "title": "Lieu d'entraînement"
        }
      },
      "Placemark.Property.Localized": {
        "description": "A localized placemark property.",
        "type": "object",
        "required": [
          "id",
          "title",
          "kind"
        ],
        "properties": {
          "id": {
            "description": "A placemark property `ID`.",
            "type": "string",
            "pattern": "^(?:[a-z0-9]+\\+?_)*[a-z0-9]+$"
          },
          "title": {
            "description": "A localized `title`.",
            "type": "string",
            "minLength": 1
          },
          "kind": {
            "description": "A placemark property `ID`.",
            "type": "string",
            "enum": [
              "feature",
              "technique",
              "benefit",
              "hazard"
            ]
          }
        },
        "example": {
          "summary": "Example placemark feature",
          "value": {
            "id": "grass",
            "title": "Herbe",
            "locale": "fr-FR"
          }
        }
      },
      "Placemark.PropertiesDictionary": {
        "type": "object"
      },
      "Placemark.Create": {
        "description": "An object with data required to create a new placemark.",
        "type": "object",
        "required": [
          "name",
          "latitude",
          "longitude",
          "kind",
          "properties"
        ],
        "properties": {
          "name": {
            "description": "A placemark `name`.",
            "type": "string",
            "minLength": 3,
            "maxLength": 48
          },
          "latitude": {
            "description": "The latitude component of a coordinate.",
            "type": "number",
            "format": "double",
            "minimum": -90,
            "maximum": 90
          },
          "longitude": {
            "description": "The longitude component of a coordinate.",
            "type": "number",
            "format": "double",
            "minimum": -180,
            "maximum": 180
          },
          "kind": {
            "description": "A placemark kind `ID`.",
            "type": "string",
            "pattern": "^(?:[a-z0-9]+_)*[a-z0-9]+$"
          },
          "caption": {
            "description": "A placemark `caption`. Possibly empty.",
            "type": "string",
            "nullable": true
          },
          "images": {
            "description": "An array of image `URL`s.",
            "type": "array",
            "uniqueItems": true,
            "maxItems": 48,
            "items": {
              "description": "An image `URL`.",
              "type": "string",
              "format": "uri"
            }
          },
          "properties": {
            "type": "object"
          }
        }
      },
      "Placemark.Public.Small": {
        "description": "A placemark, with minimum data for rendering on a map.",
        "type": "object",
        "required": [
          "id",
          "name",
          "latitude",
          "longitude",
          "kind",
          "category",
          "state",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "name": {
            "description": "A placemark `name`.",
            "type": "string",
            "minLength": 3,
            "maxLength": 48
          },
          "latitude": {
            "description": "The latitude component of a coordinate.",
            "type": "number",
            "format": "double",
            "minimum": -90,
            "maximum": 90
          },
          "longitude": {
            "description": "The longitude component of a coordinate.",
            "type": "number",
            "format": "double",
            "minimum": -180,
            "maximum": 180
          },
          "kind": {
            "description": "A placemark kind `ID`.",
            "type": "string",
            "pattern": "^(?:[a-z0-9]+_)*[a-z0-9]+$"
          },
          "category": {
            "description": "A placemark category `ID`.",
            "type": "string",
            "enum": [
              "unknown",
              "spot",
              "facility",
              "misc"
            ]
          },
          "state": {
            "description": "The state in which a placemark is.",
            "type": "string",
            "enum": [
              "unknown",
              "draft",
              "local",
              "private",
              "submitted",
              "published",
              "rejected"
            ]
          },
          "created_at": {
            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "updated_at": {
            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          }
        },
        "example": {
          "summary": "Example spot",
          "value": {
            "id": "4f9058b3-3f8f-4b10-b3c0-e28c654012e4",
            "name": "Espace de street workout Vincent Gâche",
            "latitude": 47.207423,
            "longitude": -1.547817,
            "kind": {
              "id": "calisthenics_park",
              "title": "Parc de street workout",
              "locale": "fr-FR"
            },
            "category": {
              "id": "spot",
              "title": "Spot",
              "locale": "fr-FR"
            },
            "state": "published",
            "created_at": "2020-12-02T01:43:52.285Z",
            "updated_at": "2020-12-22T22:26:11.618Z"
          }
        }
      },
      "Placemark.Public.Full": {
        "description": "A placemark, with all its details.",
        "type": "object",
        "required": [
          "id",
          "name",
          "latitude",
          "longitude",
          "kind",
          "category",
          "state",
          "caption",
          "satellite_image",
          "images",
          "city",
          "country",
          "properties",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "name": {
            "description": "A placemark `name`.",
            "type": "string",
            "minLength": 3,
            "maxLength": 48
          },
          "latitude": {
            "description": "The latitude component of a coordinate.",
            "type": "number",
            "format": "double",
            "minimum": -90,
            "maximum": 90
          },
          "longitude": {
            "description": "The longitude component of a coordinate.",
            "type": "number",
            "format": "double",
            "minimum": -180,
            "maximum": 180
          },
          "kind": {
            "description": "A placemark kind `ID`.",
            "type": "string",
            "pattern": "^(?:[a-z0-9]+_)*[a-z0-9]+$"
          },
          "category": {
            "description": "A placemark category `ID`.",
            "type": "string",
            "enum": [
              "unknown",
              "spot",
              "facility",
              "misc"
            ]
          },
          "state": {
            "description": "The state in which a placemark is.",
            "type": "string",
            "enum": [
              "unknown",
              "draft",
              "local",
              "private",
              "submitted",
              "published",
              "rejected"
            ]
          },
          "caption": {
            "description": "A placemark `caption`. Possibly empty.",
            "type": "string",
            "nullable": true
          },
          "satellite_image": {
            "description": "An image `URL`.",
            "type": "string",
            "format": "uri"
          },
          "images": {
            "description": "An array of image `URL`s.",
            "type": "array",
            "uniqueItems": true,
            "maxItems": 48,
            "items": {
              "description": "An image `URL`.",
              "type": "string",
              "format": "uri"
            }
          },
          "city": {
            "description": "The city in which a placemark is.",
            "type": "string",
            "minLength": 1
          },
          "country": {
            "description": "The country in which a placemark is.",
            "type": "string",
            "minLength": 1
          },
          "properties": {
            "description": "An array of placemark properties.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "description": "A localized placemark property.",
              "type": "object",
              "required": [
                "id",
                "title",
                "kind"
              ],
              "properties": {
                "id": {
                  "description": "A placemark property `ID`.",
                  "type": "string",
                  "pattern": "^(?:[a-z0-9]+\\+?_)*[a-z0-9]+$"
                },
                "title": {
                  "description": "A localized `title`.",
                  "type": "string",
                  "minLength": 1
                },
                "kind": {
                  "description": "A placemark property `ID`.",
                  "type": "string",
                  "enum": [
                    "feature",
                    "technique",
                    "benefit",
                    "hazard"
                  ]
                }
              },
              "example": {
                "summary": "Example placemark feature",
                "value": {
                  "id": "grass",
                  "title": "Herbe",
                  "locale": "fr-FR"
                }
              }
            },
            "example": [
              {
                "$ref": "#/components/examples/Feature1"
              },
              {
                "$ref": "#/components/examples/Feature2"
              }
            ]
          },
          "created_at": {
            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "updated_at": {
            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          }
        }
      },
      "Placemark.Submission.Review.Create": {
        "description": "An object with data required to create a new placemark submission review.",
        "type": "object",
        "required": [
          "opinion",
          "comment"
        ],
        "properties": {
          "opinion": {
            "description": "A user's opinion in a submission review.",
            "type": "string",
            "enum": [
              "positive",
              "needs_changes",
              "negative"
            ]
          },
          "comment": {
            "description": "A review comment. Possibly empty.",
            "type": "string",
            "example": "Great spot, very diverse! I like to go there for long training sessions."
          },
          "issues": {
            "description": "An array of placemark issues.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "description": "A placemark issue.",
              "type": "object",
              "required": [
                "id",
                "placemark",
                "issuer",
                "reason",
                "comment",
                "state",
                "created_at"
              ],
              "properties": {
                "id": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "placemark": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "issuer": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "reason": {
                  "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                  "type": "string",
                  "enum": [
                    "name",
                    "location",
                    "type",
                    "caption",
                    "satellite_image",
                    "images",
                    "address",
                    "properties",
                    "other"
                  ]
                },
                "comment": {
                  "description": "A comment in a placemark issue.",
                  "type": "string",
                  "minLength": 4,
                  "example": "There is no tree on this spot!"
                },
                "state": {
                  "description": "The state of a placemark issue.",
                  "type": "string",
                  "enum": [
                    "submitted",
                    "addressed",
                    "denied"
                  ]
                },
                "created_at": {
                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-07-21T17:32:28.000Z"
                }
              },
              "example": {
                "summary": "Example placemark issue",
                "value": {
                  "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                  "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                  "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                  "reason": "type",
                  "comment": "This is not a training spot, it is a parkour facility!",
                  "state": "addressed",
                  "created_at": "2020-08-15T17:01:33.818Z"
                }
              }
            },
            "example": [
              {
                "$ref": "#/components/examples/PlacemarkIssue1"
              },
              {
                "$ref": "#/components/examples/PlacemarkIssue2"
              }
            ]
          },
          "moderated": {
            "description": "A flag saying something has been moderated.",
            "type": "boolean",
            "example": true
          }
        },
        "example": {
          "summary": "Example placemark submission review creation",
          "value": {
            "opinion": "positive",
            "comment": "Everything looks good."
          }
        }
      },
      "Placemark.Submission.Review": {
        "description": "A placemark submission review.",
        "type": "object",
        "required": [
          "id",
          "placemark",
          "reviewer",
          "opinion",
          "comment",
          "created_at"
        ],
        "properties": {
          "id": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "placemark": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "reviewer": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "opinion": {
            "description": "A user's opinion in a submission review.",
            "type": "string",
            "enum": [
              "positive",
              "needs_changes",
              "negative"
            ]
          },
          "comment": {
            "description": "A review comment. Possibly empty.",
            "type": "string",
            "example": "Great spot, very diverse! I like to go there for long training sessions."
          },
          "issues": {
            "description": "An array of placemark issues.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "description": "A placemark issue.",
              "type": "object",
              "required": [
                "id",
                "placemark",
                "issuer",
                "reason",
                "comment",
                "state",
                "created_at"
              ],
              "properties": {
                "id": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "placemark": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "issuer": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "reason": {
                  "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                  "type": "string",
                  "enum": [
                    "name",
                    "location",
                    "type",
                    "caption",
                    "satellite_image",
                    "images",
                    "address",
                    "properties",
                    "other"
                  ]
                },
                "comment": {
                  "description": "A comment in a placemark issue.",
                  "type": "string",
                  "minLength": 4,
                  "example": "There is no tree on this spot!"
                },
                "state": {
                  "description": "The state of a placemark issue.",
                  "type": "string",
                  "enum": [
                    "submitted",
                    "addressed",
                    "denied"
                  ]
                },
                "created_at": {
                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-07-21T17:32:28.000Z"
                }
              },
              "example": {
                "summary": "Example placemark issue",
                "value": {
                  "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                  "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                  "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                  "reason": "type",
                  "comment": "This is not a training spot, it is a parkour facility!",
                  "state": "addressed",
                  "created_at": "2020-08-15T17:01:33.818Z"
                }
              }
            },
            "example": [
              {
                "$ref": "#/components/examples/PlacemarkIssue1"
              },
              {
                "$ref": "#/components/examples/PlacemarkIssue2"
              }
            ]
          },
          "moderated": {
            "description": "A flag saying something has been moderated.",
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          }
        },
        "example": {
          "summary": "Example placemark submission review",
          "value": {
            "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
            "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
            "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
            "opinion": "positive",
            "comment": "",
            "created_at": "2020-09-23T07:46:57.524Z"
          }
        }
      },
      "Placemark.Submission.Report": {
        "description": "A report about a placemark submission.",
        "type": "object",
        "required": [
          "id",
          "placemark",
          "state",
          "reviews",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "placemark": {
            "description": "A `UUID` (or `GUID`).",
            "type": "string",
            "format": "uuid",
            "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
          },
          "state": {
            "description": "The state of a placemark submission.",
            "type": "string",
            "enum": [
              "waiting_for_reviews",
              "needs_changes",
              "waiting_for_changes",
              "accepted",
              "rejected",
              "moderated"
            ]
          },
          "reviews": {
            "description": "An array of placemark submission reviews.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "description": "A placemark submission review.",
              "type": "object",
              "required": [
                "id",
                "placemark",
                "reviewer",
                "opinion",
                "comment",
                "created_at"
              ],
              "properties": {
                "id": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "placemark": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "reviewer": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "opinion": {
                  "description": "A user's opinion in a submission review.",
                  "type": "string",
                  "enum": [
                    "positive",
                    "needs_changes",
                    "negative"
                  ]
                },
                "comment": {
                  "description": "A review comment. Possibly empty.",
                  "type": "string",
                  "example": "Great spot, very diverse! I like to go there for long training sessions."
                },
                "issues": {
                  "description": "An array of placemark issues.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "description": "A placemark issue.",
                    "type": "object",
                    "required": [
                      "id",
                      "placemark",
                      "issuer",
                      "reason",
                      "comment",
                      "state",
                      "created_at"
                    ],
                    "properties": {
                      "id": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "placemark": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "issuer": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "reason": {
                        "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                        "type": "string",
                        "enum": [
                          "name",
                          "location",
                          "type",
                          "caption",
                          "satellite_image",
                          "images",
                          "address",
                          "properties",
                          "other"
                        ]
                      },
                      "comment": {
                        "description": "A comment in a placemark issue.",
                        "type": "string",
                        "minLength": 4,
                        "example": "There is no tree on this spot!"
                      },
                      "state": {
                        "description": "The state of a placemark issue.",
                        "type": "string",
                        "enum": [
                          "submitted",
                          "addressed",
                          "denied"
                        ]
                      },
                      "created_at": {
                        "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-07-21T17:32:28.000Z"
                      }
                    },
                    "example": {
                      "summary": "Example placemark issue",
                      "value": {
                        "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                        "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                        "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                        "reason": "type",
                        "comment": "This is not a training spot, it is a parkour facility!",
                        "state": "addressed",
                        "created_at": "2020-08-15T17:01:33.818Z"
                      }
                    }
                  },
                  "example": [
                    {
                      "$ref": "#/components/examples/PlacemarkIssue1"
                    },
                    {
                      "$ref": "#/components/examples/PlacemarkIssue2"
                    }
                  ]
                },
                "moderated": {
                  "description": "A flag saying something has been moderated.",
                  "type": "boolean",
                  "example": true
                },
                "created_at": {
                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-07-21T17:32:28.000Z"
                }
              },
              "example": {
                "summary": "Example placemark submission review",
                "value": {
                  "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
                  "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
                  "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
                  "opinion": "positive",
                  "comment": "",
                  "created_at": "2020-09-23T07:46:57.524Z"
                }
              }
            },
            "example": [
              {
                "$ref": "#/components/examples/PlacemarkSubmissionReview1"
              },
              {
                "$ref": "#/components/examples/PlacemarkSubmissionReview2"
              }
            ]
          },
          "created_at": {
            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "updated_at": {
            "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          }
        },
        "example": {
          "summary": "Example placemark submission report",
          "value": {
            "id": "24ffb61e-ad56-4244-bbd5-673944e74116",
            "placemark": "6af987db-b1f9-4f9d-ab2e-c330b4ec78bd",
            "reviews": [
              {
                "$ref": "#/components/examples/PlacemarkSubmissionReview1"
              },
              {
                "$ref": "#/components/examples/PlacemarkSubmissionReview2"
              }
            ],
            "created_at": "2020-09-23T07:46:57.524Z",
            "updated_at": "2020-10-05T09:23:21.836Z"
          }
        }
      },
      "ArrayOfPlacemarks": {
        "description": "An array of placemarks.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "description": "A placemark, with minimum data for rendering on a map.",
          "type": "object",
          "required": [
            "id",
            "name",
            "latitude",
            "longitude",
            "kind",
            "category",
            "state",
            "created_at",
            "updated_at"
          ],
          "properties": {
            "id": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            },
            "name": {
              "description": "A placemark `name`.",
              "type": "string",
              "minLength": 3,
              "maxLength": 48
            },
            "latitude": {
              "description": "The latitude component of a coordinate.",
              "type": "number",
              "format": "double",
              "minimum": -90,
              "maximum": 90
            },
            "longitude": {
              "description": "The longitude component of a coordinate.",
              "type": "number",
              "format": "double",
              "minimum": -180,
              "maximum": 180
            },
            "kind": {
              "description": "A placemark kind `ID`.",
              "type": "string",
              "pattern": "^(?:[a-z0-9]+_)*[a-z0-9]+$"
            },
            "category": {
              "description": "A placemark category `ID`.",
              "type": "string",
              "enum": [
                "unknown",
                "spot",
                "facility",
                "misc"
              ]
            },
            "state": {
              "description": "The state in which a placemark is.",
              "type": "string",
              "enum": [
                "unknown",
                "draft",
                "local",
                "private",
                "submitted",
                "published",
                "rejected"
              ]
            },
            "created_at": {
              "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
              "type": "string",
              "format": "date-time",
              "example": "2017-07-21T17:32:28.000Z"
            },
            "updated_at": {
              "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
              "type": "string",
              "format": "date-time",
              "example": "2017-07-21T17:32:28.000Z"
            }
          },
          "example": {
            "summary": "Example spot",
            "value": {
              "id": "4f9058b3-3f8f-4b10-b3c0-e28c654012e4",
              "name": "Espace de street workout Vincent Gâche",
              "latitude": 47.207423,
              "longitude": -1.547817,
              "kind": {
                "id": "calisthenics_park",
                "title": "Parc de street workout",
                "locale": "fr-FR"
              },
              "category": {
                "id": "spot",
                "title": "Spot",
                "locale": "fr-FR"
              },
              "state": "published",
              "created_at": "2020-12-02T01:43:52.285Z",
              "updated_at": "2020-12-22T22:26:11.618Z"
            }
          }
        },
        "example": [
          {
            "$ref": "#/components/examples/Spot1"
          },
          {
            "$ref": "#/components/examples/Spot2"
          }
        ]
      },
      "ArrayOfPlacemarkPropertyIDs": {
        "description": "An array of placemark property `ID`s.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "description": "A placemark property `ID`.",
          "type": "string",
          "pattern": "^(?:[a-z0-9]+\\+?_)*[a-z0-9]+$"
        },
        "example": [
          "grass",
          "small_wall",
          "stairs"
        ]
      },
      "ArrayOfPlacemarkProperties": {
        "description": "An array of placemark properties.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "description": "A localized placemark property.",
          "type": "object",
          "required": [
            "id",
            "title",
            "kind"
          ],
          "properties": {
            "id": {
              "description": "A placemark property `ID`.",
              "type": "string",
              "pattern": "^(?:[a-z0-9]+\\+?_)*[a-z0-9]+$"
            },
            "title": {
              "description": "A localized `title`.",
              "type": "string",
              "minLength": 1
            },
            "kind": {
              "description": "A placemark property `ID`.",
              "type": "string",
              "enum": [
                "feature",
                "technique",
                "benefit",
                "hazard"
              ]
            }
          },
          "example": {
            "summary": "Example placemark feature",
            "value": {
              "id": "grass",
              "title": "Herbe",
              "locale": "fr-FR"
            }
          }
        },
        "example": [
          {
            "$ref": "#/components/examples/Feature1"
          },
          {
            "$ref": "#/components/examples/Feature2"
          }
        ]
      },
      "ArrayOfPlacemarkIssues": {
        "description": "An array of placemark issues.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "description": "A placemark issue.",
          "type": "object",
          "required": [
            "id",
            "placemark",
            "issuer",
            "reason",
            "comment",
            "state",
            "created_at"
          ],
          "properties": {
            "id": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            },
            "placemark": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            },
            "issuer": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            },
            "reason": {
              "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
              "type": "string",
              "enum": [
                "name",
                "location",
                "type",
                "caption",
                "satellite_image",
                "images",
                "address",
                "properties",
                "other"
              ]
            },
            "comment": {
              "description": "A comment in a placemark issue.",
              "type": "string",
              "minLength": 4,
              "example": "There is no tree on this spot!"
            },
            "state": {
              "description": "The state of a placemark issue.",
              "type": "string",
              "enum": [
                "submitted",
                "addressed",
                "denied"
              ]
            },
            "created_at": {
              "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
              "type": "string",
              "format": "date-time",
              "example": "2017-07-21T17:32:28.000Z"
            }
          },
          "example": {
            "summary": "Example placemark issue",
            "value": {
              "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
              "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
              "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
              "reason": "type",
              "comment": "This is not a training spot, it is a parkour facility!",
              "state": "addressed",
              "created_at": "2020-08-15T17:01:33.818Z"
            }
          }
        },
        "example": [
          {
            "$ref": "#/components/examples/PlacemarkIssue1"
          },
          {
            "$ref": "#/components/examples/PlacemarkIssue2"
          }
        ]
      },
      "ArrayOfPlacemarkSubmissionReviews": {
        "description": "An array of placemark submission reviews.",
        "type": "array",
        "uniqueItems": true,
        "items": {
          "description": "A placemark submission review.",
          "type": "object",
          "required": [
            "id",
            "placemark",
            "reviewer",
            "opinion",
            "comment",
            "created_at"
          ],
          "properties": {
            "id": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            },
            "placemark": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            },
            "reviewer": {
              "description": "A `UUID` (or `GUID`).",
              "type": "string",
              "format": "uuid",
              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
            },
            "opinion": {
              "description": "A user's opinion in a submission review.",
              "type": "string",
              "enum": [
                "positive",
                "needs_changes",
                "negative"
              ]
            },
            "comment": {
              "description": "A review comment. Possibly empty.",
              "type": "string",
              "example": "Great spot, very diverse! I like to go there for long training sessions."
            },
            "issues": {
              "description": "An array of placemark issues.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "description": "A placemark issue.",
                "type": "object",
                "required": [
                  "id",
                  "placemark",
                  "issuer",
                  "reason",
                  "comment",
                  "state",
                  "created_at"
                ],
                "properties": {
                  "id": {
                    "description": "A `UUID` (or `GUID`).",
                    "type": "string",
                    "format": "uuid",
                    "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                  },
                  "placemark": {
                    "description": "A `UUID` (or `GUID`).",
                    "type": "string",
                    "format": "uuid",
                    "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                  },
                  "issuer": {
                    "description": "A `UUID` (or `GUID`).",
                    "type": "string",
                    "format": "uuid",
                    "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                  },
                  "reason": {
                    "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                    "type": "string",
                    "enum": [
                      "name",
                      "location",
                      "type",
                      "caption",
                      "satellite_image",
                      "images",
                      "address",
                      "properties",
                      "other"
                    ]
                  },
                  "comment": {
                    "description": "A comment in a placemark issue.",
                    "type": "string",
                    "minLength": 4,
                    "example": "There is no tree on this spot!"
                  },
                  "state": {
                    "description": "The state of a placemark issue.",
                    "type": "string",
                    "enum": [
                      "submitted",
                      "addressed",
                      "denied"
                    ]
                  },
                  "created_at": {
                    "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-07-21T17:32:28.000Z"
                  }
                },
                "example": {
                  "summary": "Example placemark issue",
                  "value": {
                    "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                    "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                    "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                    "reason": "type",
                    "comment": "This is not a training spot, it is a parkour facility!",
                    "state": "addressed",
                    "created_at": "2020-08-15T17:01:33.818Z"
                  }
                }
              },
              "example": [
                {
                  "$ref": "#/components/examples/PlacemarkIssue1"
                },
                {
                  "$ref": "#/components/examples/PlacemarkIssue2"
                }
              ]
            },
            "moderated": {
              "description": "A flag saying something has been moderated.",
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
              "type": "string",
              "format": "date-time",
              "example": "2017-07-21T17:32:28.000Z"
            }
          },
          "example": {
            "summary": "Example placemark submission review",
            "value": {
              "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
              "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
              "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
              "opinion": "positive",
              "comment": "",
              "created_at": "2020-09-23T07:46:57.524Z"
            }
          }
        },
        "example": [
          {
            "$ref": "#/components/examples/PlacemarkSubmissionReview1"
          },
          {
            "$ref": "#/components/examples/PlacemarkSubmissionReview2"
          }
        ]
      },
      "ArrayOfImageURLs": {
        "description": "An array of image `URL`s.",
        "type": "array",
        "uniqueItems": true,
        "maxItems": 48,
        "items": {
          "description": "An image `URL`.",
          "type": "string",
          "format": "uri"
        }
      },
      "PlacemarksPage": {
        "description": "A paginated array of placemarks.",
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "description": "An array of placemarks.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "description": "A placemark, with minimum data for rendering on a map.",
              "type": "object",
              "required": [
                "id",
                "name",
                "latitude",
                "longitude",
                "kind",
                "category",
                "state",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "name": {
                  "description": "A placemark `name`.",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 48
                },
                "latitude": {
                  "description": "The latitude component of a coordinate.",
                  "type": "number",
                  "format": "double",
                  "minimum": -90,
                  "maximum": 90
                },
                "longitude": {
                  "description": "The longitude component of a coordinate.",
                  "type": "number",
                  "format": "double",
                  "minimum": -180,
                  "maximum": 180
                },
                "kind": {
                  "description": "A placemark kind `ID`.",
                  "type": "string",
                  "pattern": "^(?:[a-z0-9]+_)*[a-z0-9]+$"
                },
                "category": {
                  "description": "A placemark category `ID`.",
                  "type": "string",
                  "enum": [
                    "unknown",
                    "spot",
                    "facility",
                    "misc"
                  ]
                },
                "state": {
                  "description": "The state in which a placemark is.",
                  "type": "string",
                  "enum": [
                    "unknown",
                    "draft",
                    "local",
                    "private",
                    "submitted",
                    "published",
                    "rejected"
                  ]
                },
                "created_at": {
                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-07-21T17:32:28.000Z"
                },
                "updated_at": {
                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-07-21T17:32:28.000Z"
                }
              },
              "example": {
                "summary": "Example spot",
                "value": {
                  "id": "4f9058b3-3f8f-4b10-b3c0-e28c654012e4",
                  "name": "Espace de street workout Vincent Gâche",
                  "latitude": 47.207423,
                  "longitude": -1.547817,
                  "kind": {
                    "id": "calisthenics_park",
                    "title": "Parc de street workout",
                    "locale": "fr-FR"
                  },
                  "category": {
                    "id": "spot",
                    "title": "Spot",
                    "locale": "fr-FR"
                  },
                  "state": "published",
                  "created_at": "2020-12-02T01:43:52.285Z",
                  "updated_at": "2020-12-22T22:26:11.618Z"
                }
              }
            },
            "example": [
              {
                "$ref": "#/components/examples/Spot1"
              },
              {
                "$ref": "#/components/examples/Spot2"
              }
            ]
          },
          "metadata": {
            "description": "Metadata about the response's pagination.",
            "type": "object",
            "required": [
              "page",
              "per",
              "total"
            ],
            "properties": {
              "page": {
                "description": "A pagination page number.",
                "type": "integer",
                "minimum": 1,
                "example": 3
              },
              "per": {
                "description": "The number of paginated items per page.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "total": {
                "description": "The total count of elements in a paginated result. It represents the total in all pages, and **does not** depend on the number of items per page.",
                "type": "integer",
                "minimum": 0,
                "example": 42
              }
            }
          }
        }
      },
      "PlacemarkSubmissionReviewsPage": {
        "description": "A paginated array of placemark submission reviews.",
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "description": "An array of placemark submission reviews.",
            "type": "array",
            "uniqueItems": true,
            "items": {
              "description": "A placemark submission review.",
              "type": "object",
              "required": [
                "id",
                "placemark",
                "reviewer",
                "opinion",
                "comment",
                "created_at"
              ],
              "properties": {
                "id": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "placemark": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "reviewer": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "opinion": {
                  "description": "A user's opinion in a submission review.",
                  "type": "string",
                  "enum": [
                    "positive",
                    "needs_changes",
                    "negative"
                  ]
                },
                "comment": {
                  "description": "A review comment. Possibly empty.",
                  "type": "string",
                  "example": "Great spot, very diverse! I like to go there for long training sessions."
                },
                "issues": {
                  "description": "An array of placemark issues.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "description": "A placemark issue.",
                    "type": "object",
                    "required": [
                      "id",
                      "placemark",
                      "issuer",
                      "reason",
                      "comment",
                      "state",
                      "created_at"
                    ],
                    "properties": {
                      "id": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "placemark": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "issuer": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "reason": {
                        "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                        "type": "string",
                        "enum": [
                          "name",
                          "location",
                          "type",
                          "caption",
                          "satellite_image",
                          "images",
                          "address",
                          "properties",
                          "other"
                        ]
                      },
                      "comment": {
                        "description": "A comment in a placemark issue.",
                        "type": "string",
                        "minLength": 4,
                        "example": "There is no tree on this spot!"
                      },
                      "state": {
                        "description": "The state of a placemark issue.",
                        "type": "string",
                        "enum": [
                          "submitted",
                          "addressed",
                          "denied"
                        ]
                      },
                      "created_at": {
                        "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-07-21T17:32:28.000Z"
                      }
                    },
                    "example": {
                      "summary": "Example placemark issue",
                      "value": {
                        "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                        "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                        "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                        "reason": "type",
                        "comment": "This is not a training spot, it is a parkour facility!",
                        "state": "addressed",
                        "created_at": "2020-08-15T17:01:33.818Z"
                      }
                    }
                  },
                  "example": [
                    {
                      "$ref": "#/components/examples/PlacemarkIssue1"
                    },
                    {
                      "$ref": "#/components/examples/PlacemarkIssue2"
                    }
                  ]
                },
                "moderated": {
                  "description": "A flag saying something has been moderated.",
                  "type": "boolean",
                  "example": true
                },
                "created_at": {
                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-07-21T17:32:28.000Z"
                }
              },
              "example": {
                "summary": "Example placemark submission review",
                "value": {
                  "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
                  "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
                  "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
                  "opinion": "positive",
                  "comment": "",
                  "created_at": "2020-09-23T07:46:57.524Z"
                }
              }
            },
            "example": [
              {
                "$ref": "#/components/examples/PlacemarkSubmissionReview1"
              },
              {
                "$ref": "#/components/examples/PlacemarkSubmissionReview2"
              }
            ]
          },
          "metadata": {
            "description": "Metadata about the response's pagination.",
            "type": "object",
            "required": [
              "page",
              "per",
              "total"
            ],
            "properties": {
              "page": {
                "description": "A pagination page number.",
                "type": "integer",
                "minimum": 1,
                "example": 3
              },
              "per": {
                "description": "The number of paginated items per page.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "total": {
                "description": "The total count of elements in a paginated result. It represents the total in all pages, and **does not** depend on the number of items per page.",
                "type": "integer",
                "minimum": 0,
                "example": 42
              }
            }
          }
        }
      },
      "PlacemarksOrder": {
        "description": "The order of the placemarks in an array:\n  * `last_created`: From the latest created placemark to the oldest one\n  * `first_created`: From the first created placemark to the latest one\n  * `last_published`: From the latest published placemark to the first one\n  * `first_published`: From the first published placemark to the last one\n**Note:** Creation date and publication date are very different: One could have created a placemark a while ago but published it just recently.",
        "type": "string",
        "enum": [
          "last_created",
          "first_created",
          "last_published",
          "first_published"
        ]
      },
      "PlacemarkSubmissionReviewsOrder": {
        "description": "The order of the placemark submission reviews in an array:\n  * `last_created`: From the latest created review to the oldest one\n  * `first_created`: From the first created review to the latest one",
        "type": "string",
        "enum": [
          "last_created",
          "first_created"
        ]
      },
      "LocalizedTitle": {
        "description": "A localized `title`.",
        "type": "string",
        "minLength": 1
      },
      "Latitude": {
        "description": "The latitude component of a coordinate.",
        "type": "number",
        "format": "double",
        "minimum": -90,
        "maximum": 90
      },
      "Longitude": {
        "description": "The longitude component of a coordinate.",
        "type": "number",
        "format": "double",
        "minimum": -180,
        "maximum": 180
      },
      "Review.Comment": {
        "description": "A review comment. Possibly empty.",
        "type": "string",
        "example": "Great spot, very diverse! I like to go there for long training sessions."
      },
      "ModeratedFlag": {
        "description": "A flag saying something has been moderated.",
        "type": "boolean",
        "example": true
      },
      "PaginatePage": {
        "description": "A pagination page number.",
        "type": "integer",
        "minimum": 1,
        "example": 3
      },
      "PaginatePerPage": {
        "description": "The number of paginated items per page.",
        "type": "integer",
        "minimum": 1,
        "example": 10
      },
      "ID": {
        "description": "A `UUID` (or `GUID`).",
        "type": "string",
        "format": "uuid",
        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
      },
      "DateTime": {
        "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
        "type": "string",
        "format": "date-time",
        "example": "2017-07-21T17:32:28.000Z"
      },
      "PaginateTotal": {
        "description": "The total count of elements in a paginated result. It represents the total in all pages, and **does not** depend on the number of items per page.",
        "type": "integer",
        "minimum": 0,
        "example": 42
      },
      "PaginateMetadata": {
        "description": "Metadata about the response's pagination.",
        "type": "object",
        "required": [
          "page",
          "per",
          "total"
        ],
        "properties": {
          "page": {
            "description": "A pagination page number.",
            "type": "integer",
            "minimum": 1,
            "example": 3
          },
          "per": {
            "description": "The number of paginated items per page.",
            "type": "integer",
            "minimum": 1,
            "example": 10
          },
          "total": {
            "description": "The total count of elements in a paginated result. It represents the total in all pages, and **does not** depend on the number of items per page.",
            "type": "integer",
            "minimum": 0,
            "example": 42
          }
        }
      },
      "Email": {
        "description": "An email address.",
        "type": "string",
        "format": "email"
      },
      "Password": {
        "description": "A password.",
        "type": "string",
        "minLength": 8
      },
      "Error": {
        "description": "An error thrown by an API.",
        "type": "object",
        "required": [
          "error",
          "reason"
        ],
        "properties": {
          "error": {
            "type": "boolean",
            "example": true
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "Locale": {
        "description": "A locale, as described in [Language and Locale IDs](https://tinyurl.com/apple-language-and-locale-ids).",
        "type": "string",
        "format": "locale",
        "minLength": 2,
        "default": "en",
        "example": "fr-FR"
      },
      "ImageURL": {
        "description": "An image `URL`.",
        "type": "string",
        "format": "uri"
      },
      "GeoJSONObject": {
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3"
        },
        "type": "object",
        "required": [
          "type"
        ],
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Feature",
              "FeatureCollection",
              "Point",
              "MultiPoint",
              "LineString",
              "MultiLineString",
              "Polygon",
              "MultiPolygon",
              "GeometryCollection"
            ]
          },
          "bbox": {
            "type": "array",
            "minItems": 4,
            "items": {
              "type": "number"
            }
          }
        }
      },
      "GeoJSONGeometry": {
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3"
        },
        "allOf": [
          {
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "type": "object",
            "required": [
              "type"
            ],
            "discriminator": {
              "propertyName": "type"
            },
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Feature",
                  "FeatureCollection",
                  "Point",
                  "MultiPoint",
                  "LineString",
                  "MultiLineString",
                  "Polygon",
                  "MultiPolygon",
                  "GeometryCollection"
                ]
              },
              "bbox": {
                "type": "array",
                "minItems": 4,
                "items": {
                  "type": "number"
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "type"
            ],
            "discriminator": {
              "propertyName": "type"
            },
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Point",
                  "MultiPoint",
                  "LineString",
                  "MultiLineString",
                  "Polygon",
                  "MultiPolygon",
                  "GeometryCollection"
                ]
              }
            }
          }
        ]
      },
      "GeoJSONFeature": {
        "description": "GeoJSON 'Feature' object",
        "externalDocs": {
          "url": "https://tools.ietf.org/html/rfc7946#section-3.2"
        },
        "allOf": [
          {
            "externalDocs": {
              "url": "https://tools.ietf.org/html/rfc7946#section-3"
            },
            "type": "object",
            "required": [
              "type"
            ],
            "discriminator": {
              "propertyName": "type"
            },
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Feature",
                  "FeatureCollection",
                  "Point",
                  "MultiPoint",
                  "LineString",
                  "MultiLineString",
                  "Polygon",
                  "MultiPolygon",
                  "GeometryCollection"
                ]
              },
              "bbox": {
                "type": "array",
                "minItems": 4,
                "items": {
                  "type": "number"
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "geometry",
              "properties"
            ],
            "properties": {
              "geometry": {
                "allOf": [
                  {
                    "nullable": true
                  },
                  {
                    "externalDocs": {
                      "url": "https://tools.ietf.org/html/rfc7946#section-3"
                    },
                    "allOf": [
                      {
                        "externalDocs": {
                          "url": "https://tools.ietf.org/html/rfc7946#section-3"
                        },
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "discriminator": {
                          "propertyName": "type"
                        },
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Feature",
                              "FeatureCollection",
                              "Point",
                              "MultiPoint",
                              "LineString",
                              "MultiLineString",
                              "Polygon",
                              "MultiPolygon",
                              "GeometryCollection"
                            ]
                          },
                          "bbox": {
                            "type": "array",
                            "minItems": 4,
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "discriminator": {
                          "propertyName": "type"
                        },
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "Point",
                              "MultiPoint",
                              "LineString",
                              "MultiLineString",
                              "Polygon",
                              "MultiPolygon",
                              "GeometryCollection"
                            ]
                          }
                        }
                      }
                    ]
                  }
                ]
              },
              "properties": {
                "type": "object",
                "nullable": true
              },
              "id": {
                "oneOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authentication information is missing or is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Unauthorized": {
                "value": {
                  "error": true,
                  "reason": "Unauthorized"
                }
              }
            }
          }
        }
      },
      "AuthUnauthorizedError": {
        "description": "Authentication information is missing or is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Unauthorized_BearerAuth": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "No auth provided": {
                "value": {
                  "error": true,
                  "reason": "Invalid authorization token."
                }
              },
              "Invalid auth type": {
                "value": {
                  "error": true,
                  "reason": "Invalid authorization token."
                }
              },
              "Invalid token": {
                "value": {
                  "error": true,
                  "reason": "Invalid authorization token."
                }
              }
            }
          }
        }
      },
      "CreatePlacemark_Success": {
        "description": "Successfully Created",
        "content": {
          "application/json": {
            "schema": {
              "description": "GeoJSON 'Feature' object",
              "externalDocs": {
                "url": "https://tools.ietf.org/html/rfc7946#section-3.2"
              },
              "allOf": [
                {
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc7946#section-3"
                  },
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "discriminator": {
                    "propertyName": "type"
                  },
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "Feature",
                        "FeatureCollection",
                        "Point",
                        "MultiPoint",
                        "LineString",
                        "MultiLineString",
                        "Polygon",
                        "MultiPolygon",
                        "GeometryCollection"
                      ]
                    },
                    "bbox": {
                      "type": "array",
                      "minItems": 4,
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "geometry",
                    "properties"
                  ],
                  "properties": {
                    "geometry": {
                      "allOf": [
                        {
                          "nullable": true
                        },
                        {
                          "externalDocs": {
                            "url": "https://tools.ietf.org/html/rfc7946#section-3"
                          },
                          "allOf": [
                            {
                              "externalDocs": {
                                "url": "https://tools.ietf.org/html/rfc7946#section-3"
                              },
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "discriminator": {
                                "propertyName": "type"
                              },
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "Feature",
                                    "FeatureCollection",
                                    "Point",
                                    "MultiPoint",
                                    "LineString",
                                    "MultiLineString",
                                    "Polygon",
                                    "MultiPolygon",
                                    "GeometryCollection"
                                  ]
                                },
                                "bbox": {
                                  "type": "array",
                                  "minItems": 4,
                                  "items": {
                                    "type": "number"
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "discriminator": {
                                "propertyName": "type"
                              },
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "Point",
                                    "MultiPoint",
                                    "LineString",
                                    "MultiLineString",
                                    "Polygon",
                                    "MultiPolygon",
                                    "GeometryCollection"
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "properties": {
                      "type": "object",
                      "nullable": true
                    },
                    "id": {
                      "oneOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "CreatePlacemark_BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Missing field": {
                "value": {
                  "error": true,
                  "reason": "name is required"
                }
              },
              "Name too small": {
                "value": {
                  "error": true,
                  "reason": "name is less than minimum of 3 character(s)"
                }
              },
              "Invalid coordinates": {
                "value": {
                  "error": true,
                  "reason": "latitude is greater than maximum of 90.0"
                }
              },
              "Invalid kind": {
                "description": "We could not find the placemark kind you provided.",
                "value": {
                  "error": true,
                  "reason": "Placemark kind not found"
                }
              },
              "Invalid property": {
                "value": {
                  "error": true,
                  "reason": "Invalid property: { \"kind\": \"feature\", \"id\": \"random_id\" }"
                }
              }
            }
          }
        }
      },
      "ListPlacemarks_Success": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "description": "A paginated array of placemarks.",
              "type": "object",
              "required": [
                "items",
                "metadata"
              ],
              "properties": {
                "items": {
                  "description": "An array of placemarks.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "description": "A placemark, with minimum data for rendering on a map.",
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "latitude",
                      "longitude",
                      "kind",
                      "category",
                      "state",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "name": {
                        "description": "A placemark `name`.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 48
                      },
                      "latitude": {
                        "description": "The latitude component of a coordinate.",
                        "type": "number",
                        "format": "double",
                        "minimum": -90,
                        "maximum": 90
                      },
                      "longitude": {
                        "description": "The longitude component of a coordinate.",
                        "type": "number",
                        "format": "double",
                        "minimum": -180,
                        "maximum": 180
                      },
                      "kind": {
                        "description": "A placemark kind `ID`.",
                        "type": "string",
                        "pattern": "^(?:[a-z0-9]+_)*[a-z0-9]+$"
                      },
                      "category": {
                        "description": "A placemark category `ID`.",
                        "type": "string",
                        "enum": [
                          "unknown",
                          "spot",
                          "facility",
                          "misc"
                        ]
                      },
                      "state": {
                        "description": "The state in which a placemark is.",
                        "type": "string",
                        "enum": [
                          "unknown",
                          "draft",
                          "local",
                          "private",
                          "submitted",
                          "published",
                          "rejected"
                        ]
                      },
                      "created_at": {
                        "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-07-21T17:32:28.000Z"
                      },
                      "updated_at": {
                        "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-07-21T17:32:28.000Z"
                      }
                    },
                    "example": {
                      "summary": "Example spot",
                      "value": {
                        "id": "4f9058b3-3f8f-4b10-b3c0-e28c654012e4",
                        "name": "Espace de street workout Vincent Gâche",
                        "latitude": 47.207423,
                        "longitude": -1.547817,
                        "kind": {
                          "id": "calisthenics_park",
                          "title": "Parc de street workout",
                          "locale": "fr-FR"
                        },
                        "category": {
                          "id": "spot",
                          "title": "Spot",
                          "locale": "fr-FR"
                        },
                        "state": "published",
                        "created_at": "2020-12-02T01:43:52.285Z",
                        "updated_at": "2020-12-22T22:26:11.618Z"
                      }
                    }
                  },
                  "example": [
                    {
                      "$ref": "#/components/examples/Spot1"
                    },
                    {
                      "$ref": "#/components/examples/Spot2"
                    }
                  ]
                },
                "metadata": {
                  "description": "Metadata about the response's pagination.",
                  "type": "object",
                  "required": [
                    "page",
                    "per",
                    "total"
                  ],
                  "properties": {
                    "page": {
                      "description": "A pagination page number.",
                      "type": "integer",
                      "minimum": 1,
                      "example": 3
                    },
                    "per": {
                      "description": "The number of paginated items per page.",
                      "type": "integer",
                      "minimum": 1,
                      "example": 10
                    },
                    "total": {
                      "description": "The total count of elements in a paginated result. It represents the total in all pages, and **does not** depend on the number of items per page.",
                      "type": "integer",
                      "minimum": 0,
                      "example": 42
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ListPlacemarks_BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Invalid state query param": {
                "value": {
                  "error": true,
                  "reason": "Cannot initialize State from invalid String value lorem_ipsum for key state"
                }
              }
            }
          }
        }
      },
      "ListPlacemarks_Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Private state": {
                "value": {
                  "error": true,
                  "reason": "You cannot list private placemarks without being authenticated"
                }
              }
            }
          }
        }
      },
      "GetPlacemark_Success": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "description": "GeoJSON 'Feature' object",
              "externalDocs": {
                "url": "https://tools.ietf.org/html/rfc7946#section-3.2"
              },
              "allOf": [
                {
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc7946#section-3"
                  },
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "discriminator": {
                    "propertyName": "type"
                  },
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "Feature",
                        "FeatureCollection",
                        "Point",
                        "MultiPoint",
                        "LineString",
                        "MultiLineString",
                        "Polygon",
                        "MultiPolygon",
                        "GeometryCollection"
                      ]
                    },
                    "bbox": {
                      "type": "array",
                      "minItems": 4,
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "geometry",
                    "properties"
                  ],
                  "properties": {
                    "geometry": {
                      "allOf": [
                        {
                          "nullable": true
                        },
                        {
                          "externalDocs": {
                            "url": "https://tools.ietf.org/html/rfc7946#section-3"
                          },
                          "allOf": [
                            {
                              "externalDocs": {
                                "url": "https://tools.ietf.org/html/rfc7946#section-3"
                              },
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "discriminator": {
                                "propertyName": "type"
                              },
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "Feature",
                                    "FeatureCollection",
                                    "Point",
                                    "MultiPoint",
                                    "LineString",
                                    "MultiLineString",
                                    "Polygon",
                                    "MultiPolygon",
                                    "GeometryCollection"
                                  ]
                                },
                                "bbox": {
                                  "type": "array",
                                  "minItems": 4,
                                  "items": {
                                    "type": "number"
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "discriminator": {
                                "propertyName": "type"
                              },
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "Point",
                                    "MultiPoint",
                                    "LineString",
                                    "MultiLineString",
                                    "Polygon",
                                    "MultiPolygon",
                                    "GeometryCollection"
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "properties": {
                      "type": "object",
                      "nullable": true
                    },
                    "id": {
                      "oneOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "GetPlacemark_NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Placemark not found": {
                "value": {
                  "error": true,
                  "reason": "Placemark not found."
                }
              }
            }
          }
        }
      },
      "DeletePlacemark_Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Not your placemark": {
                "description": "You cannot delete someone else's placemark.",
                "value": {
                  "error": true,
                  "reason": "You cannot delete someone else's placemark!"
                }
              }
            }
          }
        }
      },
      "DeletePlacemark_NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Placemark not found": {
                "value": {
                  "error": true,
                  "reason": "Placemark not found."
                }
              }
            }
          }
        }
      },
      "SubmitPlacemark_Success": {
        "description": "Successfully Submitted",
        "content": {
          "application/json": {
            "schema": {
              "description": "A report about a placemark submission.",
              "type": "object",
              "required": [
                "id",
                "placemark",
                "state",
                "reviews",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "placemark": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "state": {
                  "description": "The state of a placemark submission.",
                  "type": "string",
                  "enum": [
                    "waiting_for_reviews",
                    "needs_changes",
                    "waiting_for_changes",
                    "accepted",
                    "rejected",
                    "moderated"
                  ]
                },
                "reviews": {
                  "description": "An array of placemark submission reviews.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "description": "A placemark submission review.",
                    "type": "object",
                    "required": [
                      "id",
                      "placemark",
                      "reviewer",
                      "opinion",
                      "comment",
                      "created_at"
                    ],
                    "properties": {
                      "id": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "placemark": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "reviewer": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "opinion": {
                        "description": "A user's opinion in a submission review.",
                        "type": "string",
                        "enum": [
                          "positive",
                          "needs_changes",
                          "negative"
                        ]
                      },
                      "comment": {
                        "description": "A review comment. Possibly empty.",
                        "type": "string",
                        "example": "Great spot, very diverse! I like to go there for long training sessions."
                      },
                      "issues": {
                        "description": "An array of placemark issues.",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "description": "A placemark issue.",
                          "type": "object",
                          "required": [
                            "id",
                            "placemark",
                            "issuer",
                            "reason",
                            "comment",
                            "state",
                            "created_at"
                          ],
                          "properties": {
                            "id": {
                              "description": "A `UUID` (or `GUID`).",
                              "type": "string",
                              "format": "uuid",
                              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                            },
                            "placemark": {
                              "description": "A `UUID` (or `GUID`).",
                              "type": "string",
                              "format": "uuid",
                              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                            },
                            "issuer": {
                              "description": "A `UUID` (or `GUID`).",
                              "type": "string",
                              "format": "uuid",
                              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                            },
                            "reason": {
                              "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                              "type": "string",
                              "enum": [
                                "name",
                                "location",
                                "type",
                                "caption",
                                "satellite_image",
                                "images",
                                "address",
                                "properties",
                                "other"
                              ]
                            },
                            "comment": {
                              "description": "A comment in a placemark issue.",
                              "type": "string",
                              "minLength": 4,
                              "example": "There is no tree on this spot!"
                            },
                            "state": {
                              "description": "The state of a placemark issue.",
                              "type": "string",
                              "enum": [
                                "submitted",
                                "addressed",
                                "denied"
                              ]
                            },
                            "created_at": {
                              "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                              "type": "string",
                              "format": "date-time",
                              "example": "2017-07-21T17:32:28.000Z"
                            }
                          },
                          "example": {
                            "summary": "Example placemark issue",
                            "value": {
                              "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                              "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                              "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                              "reason": "type",
                              "comment": "This is not a training spot, it is a parkour facility!",
                              "state": "addressed",
                              "created_at": "2020-08-15T17:01:33.818Z"
                            }
                          }
                        },
                        "example": [
                          {
                            "$ref": "#/components/examples/PlacemarkIssue1"
                          },
                          {
                            "$ref": "#/components/examples/PlacemarkIssue2"
                          }
                        ]
                      },
                      "moderated": {
                        "description": "A flag saying something has been moderated.",
                        "type": "boolean",
                        "example": true
                      },
                      "created_at": {
                        "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-07-21T17:32:28.000Z"
                      }
                    },
                    "example": {
                      "summary": "Example placemark submission review",
                      "value": {
                        "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
                        "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
                        "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
                        "opinion": "positive",
                        "comment": "",
                        "created_at": "2020-09-23T07:46:57.524Z"
                      }
                    }
                  },
                  "example": [
                    {
                      "$ref": "#/components/examples/PlacemarkSubmissionReview1"
                    },
                    {
                      "$ref": "#/components/examples/PlacemarkSubmissionReview2"
                    }
                  ]
                },
                "created_at": {
                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-07-21T17:32:28.000Z"
                },
                "updated_at": {
                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-07-21T17:32:28.000Z"
                }
              },
              "example": {
                "summary": "Example placemark submission report",
                "value": {
                  "id": "24ffb61e-ad56-4244-bbd5-673944e74116",
                  "placemark": "6af987db-b1f9-4f9d-ab2e-c330b4ec78bd",
                  "reviews": [
                    {
                      "$ref": "#/components/examples/PlacemarkSubmissionReview1"
                    },
                    {
                      "$ref": "#/components/examples/PlacemarkSubmissionReview2"
                    }
                  ],
                  "created_at": "2020-09-23T07:46:57.524Z",
                  "updated_at": "2020-10-05T09:23:21.836Z"
                }
              }
            }
          }
        }
      },
      "SubmitPlacemark_Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Not your placemark": {
                "description": "You cannot submit someone else's placemark.",
                "value": {
                  "error": true,
                  "reason": "You cannot submit someone else's placemark!"
                }
              },
              "Already submitted": {
                "description": "You cannot submit a placemark twice.",
                "value": {
                  "error": true,
                  "reason": "You cannot submit a placemark twice!"
                }
              }
            }
          }
        }
      },
      "SubmitPlacemark_NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Placemark not found": {
                "value": {
                  "error": true,
                  "reason": "Placemark not found."
                }
              }
            }
          }
        }
      },
      "GetPlacemarkSubmissionReport_Success": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "description": "A report about a placemark submission.",
              "type": "object",
              "required": [
                "id",
                "placemark",
                "state",
                "reviews",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "placemark": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "state": {
                  "description": "The state of a placemark submission.",
                  "type": "string",
                  "enum": [
                    "waiting_for_reviews",
                    "needs_changes",
                    "waiting_for_changes",
                    "accepted",
                    "rejected",
                    "moderated"
                  ]
                },
                "reviews": {
                  "description": "An array of placemark submission reviews.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "description": "A placemark submission review.",
                    "type": "object",
                    "required": [
                      "id",
                      "placemark",
                      "reviewer",
                      "opinion",
                      "comment",
                      "created_at"
                    ],
                    "properties": {
                      "id": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "placemark": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "reviewer": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "opinion": {
                        "description": "A user's opinion in a submission review.",
                        "type": "string",
                        "enum": [
                          "positive",
                          "needs_changes",
                          "negative"
                        ]
                      },
                      "comment": {
                        "description": "A review comment. Possibly empty.",
                        "type": "string",
                        "example": "Great spot, very diverse! I like to go there for long training sessions."
                      },
                      "issues": {
                        "description": "An array of placemark issues.",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "description": "A placemark issue.",
                          "type": "object",
                          "required": [
                            "id",
                            "placemark",
                            "issuer",
                            "reason",
                            "comment",
                            "state",
                            "created_at"
                          ],
                          "properties": {
                            "id": {
                              "description": "A `UUID` (or `GUID`).",
                              "type": "string",
                              "format": "uuid",
                              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                            },
                            "placemark": {
                              "description": "A `UUID` (or `GUID`).",
                              "type": "string",
                              "format": "uuid",
                              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                            },
                            "issuer": {
                              "description": "A `UUID` (or `GUID`).",
                              "type": "string",
                              "format": "uuid",
                              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                            },
                            "reason": {
                              "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                              "type": "string",
                              "enum": [
                                "name",
                                "location",
                                "type",
                                "caption",
                                "satellite_image",
                                "images",
                                "address",
                                "properties",
                                "other"
                              ]
                            },
                            "comment": {
                              "description": "A comment in a placemark issue.",
                              "type": "string",
                              "minLength": 4,
                              "example": "There is no tree on this spot!"
                            },
                            "state": {
                              "description": "The state of a placemark issue.",
                              "type": "string",
                              "enum": [
                                "submitted",
                                "addressed",
                                "denied"
                              ]
                            },
                            "created_at": {
                              "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                              "type": "string",
                              "format": "date-time",
                              "example": "2017-07-21T17:32:28.000Z"
                            }
                          },
                          "example": {
                            "summary": "Example placemark issue",
                            "value": {
                              "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                              "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                              "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                              "reason": "type",
                              "comment": "This is not a training spot, it is a parkour facility!",
                              "state": "addressed",
                              "created_at": "2020-08-15T17:01:33.818Z"
                            }
                          }
                        },
                        "example": [
                          {
                            "$ref": "#/components/examples/PlacemarkIssue1"
                          },
                          {
                            "$ref": "#/components/examples/PlacemarkIssue2"
                          }
                        ]
                      },
                      "moderated": {
                        "description": "A flag saying something has been moderated.",
                        "type": "boolean",
                        "example": true
                      },
                      "created_at": {
                        "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-07-21T17:32:28.000Z"
                      }
                    },
                    "example": {
                      "summary": "Example placemark submission review",
                      "value": {
                        "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
                        "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
                        "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
                        "opinion": "positive",
                        "comment": "",
                        "created_at": "2020-09-23T07:46:57.524Z"
                      }
                    }
                  },
                  "example": [
                    {
                      "$ref": "#/components/examples/PlacemarkSubmissionReview1"
                    },
                    {
                      "$ref": "#/components/examples/PlacemarkSubmissionReview2"
                    }
                  ]
                },
                "created_at": {
                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-07-21T17:32:28.000Z"
                },
                "updated_at": {
                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-07-21T17:32:28.000Z"
                }
              },
              "example": {
                "summary": "Example placemark submission report",
                "value": {
                  "id": "24ffb61e-ad56-4244-bbd5-673944e74116",
                  "placemark": "6af987db-b1f9-4f9d-ab2e-c330b4ec78bd",
                  "reviews": [
                    {
                      "$ref": "#/components/examples/PlacemarkSubmissionReview1"
                    },
                    {
                      "$ref": "#/components/examples/PlacemarkSubmissionReview2"
                    }
                  ],
                  "created_at": "2020-09-23T07:46:57.524Z",
                  "updated_at": "2020-10-05T09:23:21.836Z"
                }
              }
            }
          }
        }
      },
      "GetPlacemarkSubmissionReport_NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Placemark not found": {
                "value": {
                  "error": true,
                  "reason": "Placemark not found."
                }
              }
            }
          }
        }
      },
      "GetPlacemarkSubmissionReport_PreconditionFailed": {
        "description": "Precondition Failed",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Placemark not submitted": {
                "value": {
                  "error": true,
                  "reason": "Placemark not submitted."
                }
              }
            }
          }
        }
      },
      "AddPlacemarkSubmissionReview_Success": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "description": "A placemark submission review.",
              "type": "object",
              "required": [
                "id",
                "placemark",
                "reviewer",
                "opinion",
                "comment",
                "created_at"
              ],
              "properties": {
                "id": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "placemark": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "reviewer": {
                  "description": "A `UUID` (or `GUID`).",
                  "type": "string",
                  "format": "uuid",
                  "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                },
                "opinion": {
                  "description": "A user's opinion in a submission review.",
                  "type": "string",
                  "enum": [
                    "positive",
                    "needs_changes",
                    "negative"
                  ]
                },
                "comment": {
                  "description": "A review comment. Possibly empty.",
                  "type": "string",
                  "example": "Great spot, very diverse! I like to go there for long training sessions."
                },
                "issues": {
                  "description": "An array of placemark issues.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "description": "A placemark issue.",
                    "type": "object",
                    "required": [
                      "id",
                      "placemark",
                      "issuer",
                      "reason",
                      "comment",
                      "state",
                      "created_at"
                    ],
                    "properties": {
                      "id": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "placemark": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "issuer": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "reason": {
                        "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                        "type": "string",
                        "enum": [
                          "name",
                          "location",
                          "type",
                          "caption",
                          "satellite_image",
                          "images",
                          "address",
                          "properties",
                          "other"
                        ]
                      },
                      "comment": {
                        "description": "A comment in a placemark issue.",
                        "type": "string",
                        "minLength": 4,
                        "example": "There is no tree on this spot!"
                      },
                      "state": {
                        "description": "The state of a placemark issue.",
                        "type": "string",
                        "enum": [
                          "submitted",
                          "addressed",
                          "denied"
                        ]
                      },
                      "created_at": {
                        "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-07-21T17:32:28.000Z"
                      }
                    },
                    "example": {
                      "summary": "Example placemark issue",
                      "value": {
                        "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                        "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                        "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                        "reason": "type",
                        "comment": "This is not a training spot, it is a parkour facility!",
                        "state": "addressed",
                        "created_at": "2020-08-15T17:01:33.818Z"
                      }
                    }
                  },
                  "example": [
                    {
                      "$ref": "#/components/examples/PlacemarkIssue1"
                    },
                    {
                      "$ref": "#/components/examples/PlacemarkIssue2"
                    }
                  ]
                },
                "moderated": {
                  "description": "A flag saying something has been moderated.",
                  "type": "boolean",
                  "example": true
                },
                "created_at": {
                  "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-07-21T17:32:28.000Z"
                }
              },
              "example": {
                "summary": "Example placemark submission review",
                "value": {
                  "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
                  "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
                  "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
                  "opinion": "positive",
                  "comment": "",
                  "created_at": "2020-09-23T07:46:57.524Z"
                }
              }
            }
          }
        }
      },
      "AddPlacemarkSubmissionReview_BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "AddPlacemarkSubmissionReview_Forbidden": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Placemark not found": {
                "description": "Cannot use `moderated` flag.",
                "value": {
                  "error": true,
                  "reason": "You need to be a moderator in order to use the `moderated` flag."
                }
              }
            }
          }
        }
      },
      "AddPlacemarkSubmissionReview_NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Placemark not found": {
                "value": {
                  "error": true,
                  "reason": "Placemark not found."
                }
              }
            }
          }
        }
      },
      "AddPlacemarkSubmissionReview_PreconditionFailed": {
        "description": "Precondition Failed",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Placemark not submitted": {
                "value": {
                  "error": true,
                  "reason": "Placemark not submitted."
                }
              }
            }
          }
        }
      },
      "ListPlacemarkSubmissionReviews_Success": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "description": "A paginated array of placemark submission reviews.",
              "type": "object",
              "required": [
                "items",
                "metadata"
              ],
              "properties": {
                "items": {
                  "description": "An array of placemark submission reviews.",
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "description": "A placemark submission review.",
                    "type": "object",
                    "required": [
                      "id",
                      "placemark",
                      "reviewer",
                      "opinion",
                      "comment",
                      "created_at"
                    ],
                    "properties": {
                      "id": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "placemark": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "reviewer": {
                        "description": "A `UUID` (or `GUID`).",
                        "type": "string",
                        "format": "uuid",
                        "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                      },
                      "opinion": {
                        "description": "A user's opinion in a submission review.",
                        "type": "string",
                        "enum": [
                          "positive",
                          "needs_changes",
                          "negative"
                        ]
                      },
                      "comment": {
                        "description": "A review comment. Possibly empty.",
                        "type": "string",
                        "example": "Great spot, very diverse! I like to go there for long training sessions."
                      },
                      "issues": {
                        "description": "An array of placemark issues.",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "description": "A placemark issue.",
                          "type": "object",
                          "required": [
                            "id",
                            "placemark",
                            "issuer",
                            "reason",
                            "comment",
                            "state",
                            "created_at"
                          ],
                          "properties": {
                            "id": {
                              "description": "A `UUID` (or `GUID`).",
                              "type": "string",
                              "format": "uuid",
                              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                            },
                            "placemark": {
                              "description": "A `UUID` (or `GUID`).",
                              "type": "string",
                              "format": "uuid",
                              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                            },
                            "issuer": {
                              "description": "A `UUID` (or `GUID`).",
                              "type": "string",
                              "format": "uuid",
                              "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
                            },
                            "reason": {
                              "description": "The reason of a placemark issue. For unhandled cases, use `other`.",
                              "type": "string",
                              "enum": [
                                "name",
                                "location",
                                "type",
                                "caption",
                                "satellite_image",
                                "images",
                                "address",
                                "properties",
                                "other"
                              ]
                            },
                            "comment": {
                              "description": "A comment in a placemark issue.",
                              "type": "string",
                              "minLength": 4,
                              "example": "There is no tree on this spot!"
                            },
                            "state": {
                              "description": "The state of a placemark issue.",
                              "type": "string",
                              "enum": [
                                "submitted",
                                "addressed",
                                "denied"
                              ]
                            },
                            "created_at": {
                              "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                              "type": "string",
                              "format": "date-time",
                              "example": "2017-07-21T17:32:28.000Z"
                            }
                          },
                          "example": {
                            "summary": "Example placemark issue",
                            "value": {
                              "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
                              "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
                              "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
                              "reason": "type",
                              "comment": "This is not a training spot, it is a parkour facility!",
                              "state": "addressed",
                              "created_at": "2020-08-15T17:01:33.818Z"
                            }
                          }
                        },
                        "example": [
                          {
                            "$ref": "#/components/examples/PlacemarkIssue1"
                          },
                          {
                            "$ref": "#/components/examples/PlacemarkIssue2"
                          }
                        ]
                      },
                      "moderated": {
                        "description": "A flag saying something has been moderated.",
                        "type": "boolean",
                        "example": true
                      },
                      "created_at": {
                        "description": "A `Date` with time, as described in [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).",
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-07-21T17:32:28.000Z"
                      }
                    },
                    "example": {
                      "summary": "Example placemark submission review",
                      "value": {
                        "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
                        "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
                        "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
                        "opinion": "positive",
                        "comment": "",
                        "created_at": "2020-09-23T07:46:57.524Z"
                      }
                    }
                  },
                  "example": [
                    {
                      "$ref": "#/components/examples/PlacemarkSubmissionReview1"
                    },
                    {
                      "$ref": "#/components/examples/PlacemarkSubmissionReview2"
                    }
                  ]
                },
                "metadata": {
                  "description": "Metadata about the response's pagination.",
                  "type": "object",
                  "required": [
                    "page",
                    "per",
                    "total"
                  ],
                  "properties": {
                    "page": {
                      "description": "A pagination page number.",
                      "type": "integer",
                      "minimum": 1,
                      "example": 3
                    },
                    "per": {
                      "description": "The number of paginated items per page.",
                      "type": "integer",
                      "minimum": 1,
                      "example": 10
                    },
                    "total": {
                      "description": "The total count of elements in a paginated result. It represents the total in all pages, and **does not** depend on the number of items per page.",
                      "type": "integer",
                      "minimum": 0,
                      "example": 42
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ListPlacemarkSubmissionReviews_NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Placemark not found": {
                "value": {
                  "error": true,
                  "reason": "Placemark not found."
                }
              }
            }
          }
        }
      },
      "ListPlacemarkSubmissionReviews_PreconditionFailed": {
        "description": "Precondition Failed",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Placemark not submitted": {
                "value": {
                  "error": true,
                  "reason": "Placemark not submitted."
                }
              }
            }
          }
        }
      },
      "ListPlacemarkProperties_Success": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "description": "An array of placemark properties.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "description": "A localized placemark property.",
                "type": "object",
                "required": [
                  "id",
                  "title",
                  "kind"
                ],
                "properties": {
                  "id": {
                    "description": "A placemark property `ID`.",
                    "type": "string",
                    "pattern": "^(?:[a-z0-9]+\\+?_)*[a-z0-9]+$"
                  },
                  "title": {
                    "description": "A localized `title`.",
                    "type": "string",
                    "minLength": 1
                  },
                  "kind": {
                    "description": "A placemark property `ID`.",
                    "type": "string",
                    "enum": [
                      "feature",
                      "technique",
                      "benefit",
                      "hazard"
                    ]
                  }
                },
                "example": {
                  "summary": "Example placemark feature",
                  "value": {
                    "id": "grass",
                    "title": "Herbe",
                    "locale": "fr-FR"
                  }
                }
              },
              "example": [
                {
                  "$ref": "#/components/examples/Feature1"
                },
                {
                  "$ref": "#/components/examples/Feature2"
                }
              ]
            }
          }
        }
      },
      "ListPlacemarkProperties_BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error thrown by an API.",
              "type": "object",
              "required": [
                "error",
                "reason"
              ],
              "properties": {
                "error": {
                  "type": "boolean",
                  "example": true
                },
                "reason": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Invalid property kind": {
                "value": {
                  "error": true,
                  "reason": "Invalid property kind: \"lorem\""
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "UserId": {
        "in": "path",
        "name": "userId",
        "description": "A user ID.",
        "required": true,
        "schema": {
          "description": "A `UUID` (or `GUID`).",
          "type": "string",
          "format": "uuid",
          "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
        }
      },
      "UsersOrder": {
        "in": "query",
        "name": "sort_by",
        "description": "The results order. If not set, results won't be ordered.",
        "schema": {
          "description": "The order of the users in an array:\n  * `last_joined`: From the latest created review to the oldest one\n  * `first_joined`: From the first created review to the latest one",
          "type": "string",
          "enum": [
            "last_joined",
            "first_joined"
          ]
        }
      },
      "PlacemarkId": {
        "in": "path",
        "name": "placemarkId",
        "description": "A placemark `ID`.",
        "required": true,
        "schema": {
          "description": "A `UUID` (or `GUID`).",
          "type": "string",
          "format": "uuid",
          "example": "ad959e79-55c3-4445-8c51-a74b6d52691a"
        }
      },
      "PlacemarkState": {
        "in": "query",
        "name": "state",
        "description": "A state to filter placemarks. Default is 'published'.",
        "schema": {
          "description": "The state in which a placemark is.",
          "type": "string",
          "enum": [
            "unknown",
            "draft",
            "local",
            "private",
            "submitted",
            "published",
            "rejected"
          ]
        }
      },
      "PlacemarkPropertyKind": {
        "in": "query",
        "name": "kind",
        "description": "A kind to filter properties.",
        "required": true,
        "schema": {
          "description": "A placemark property `ID`.",
          "type": "string",
          "enum": [
            "feature",
            "technique",
            "benefit",
            "hazard"
          ]
        }
      },
      "PlacemarksOrder": {
        "in": "query",
        "name": "sort_by",
        "description": "The results order. If not set, results won't be ordered.",
        "schema": {
          "description": "The order of the placemarks in an array:\n  * `last_created`: From the latest created placemark to the oldest one\n  * `first_created`: From the first created placemark to the latest one\n  * `last_published`: From the latest published placemark to the first one\n  * `first_published`: From the first published placemark to the last one\n**Note:** Creation date and publication date are very different: One could have created a placemark a while ago but published it just recently.",
          "type": "string",
          "enum": [
            "last_created",
            "first_created",
            "last_published",
            "first_published"
          ]
        }
      },
      "PlacemarkSubmissionReviewOpinion": {
        "in": "query",
        "name": "opinion",
        "description": "An opinion to filter placemark submission reviews. If not set, results won't be filtered.",
        "schema": {
          "description": "A user's opinion in a submission review.",
          "type": "string",
          "enum": [
            "positive",
            "needs_changes",
            "negative"
          ]
        }
      },
      "PlacemarkSubmissionReviewsOrder": {
        "in": "query",
        "name": "sort_by",
        "description": "The results order. If not set, results won't be ordered.",
        "schema": {
          "description": "The order of the placemark submission reviews in an array:\n  * `last_created`: From the latest created review to the oldest one\n  * `first_created`: From the first created review to the latest one",
          "type": "string",
          "enum": [
            "last_created",
            "first_created"
          ]
        }
      },
      "PaginatePage": {
        "in": "query",
        "name": "page",
        "description": "The pagination page. For example, if you paginate 1 to 42 per 10 and ask for the third page, you will get 31 to 40.",
        "required": true,
        "schema": {
          "description": "A pagination page number.",
          "type": "integer",
          "minimum": 1,
          "example": 3
        }
      },
      "PaginatePerPage": {
        "in": "query",
        "name": "per",
        "description": "The number of paginated items per page. For example, if you paginate 1 to 42 per 10 and ask for the third page, you will get 31 to 40.",
        "required": true,
        "schema": {
          "description": "The number of paginated items per page.",
          "type": "integer",
          "minimum": 1,
          "example": 10
        }
      },
      "Locale": {
        "in": "query",
        "name": "locale",
        "description": "The desired locale for response localization.",
        "schema": {
          "description": "A locale, as described in [Language and Locale IDs](https://tinyurl.com/apple-language-and-locale-ids).",
          "type": "string",
          "format": "locale",
          "minLength": 2,
          "default": "en",
          "example": "fr-FR"
        }
      }
    },
    "examples": {
      "NewPlacemark": {
        "summary": "Newly created placemark",
        "value": {
          "latitude": 48.8583,
          "longitude": 2.2945,
          "category": "spot",
          "kind": "training_spot",
          "creator": "D9CFF0B0-75DA-4A59-9BDB-A268299F4C97",
          "details": {
            "images": [],
            "satellite_image": "https://res.cloudinary.com/monki-projects/image/upload/f_auto/satellite_images/satellite-view-placeholder.jpg",
            "caption": "Test caption",
            "properties": {
              "technique": [],
              "benefit": [],
              "hazard": [],
              "feature": [
                {
                  "id": "small_wall",
                  "title": "Small Wall",
                  "kind": "feature"
                }
              ]
            }
          },
          "created_at": "2021-03-10T09:01:04Z",
          "state": "private",
          "id": "FD58CE36-5504-4743-8E9F-955A6D18DAA1",
          "updated_at": "2021-03-10T09:01:04Z",
          "name": "Test placemark"
        }
      },
      "Spot1": {
        "summary": "Example spot",
        "value": {
          "id": "4f9058b3-3f8f-4b10-b3c0-e28c654012e4",
          "name": "Espace de street workout Vincent Gâche",
          "latitude": 47.207423,
          "longitude": -1.547817,
          "kind": {
            "id": "calisthenics_park",
            "title": "Parc de street workout",
            "locale": "fr-FR"
          },
          "category": {
            "id": "spot",
            "title": "Spot",
            "locale": "fr-FR"
          },
          "state": "published",
          "created_at": "2020-12-02T01:43:52.285Z",
          "updated_at": "2020-12-22T22:26:11.618Z"
        }
      },
      "Spot2": {
        "summary": "Example spot",
        "value": {
          "id": "31256d06-7786-4555-8592-ec20e9c9cdfb",
          "name": "Porte des deux moulins",
          "latitude": 46.155295,
          "longitude": -1.159034,
          "kind": {
            "id": "training_spot",
            "title": "Lieu d'entraînement",
            "locale": "fr-FR"
          },
          "category": {
            "id": "spot",
            "title": "Spot",
            "locale": "fr-FR"
          },
          "state": "published",
          "created_at": "2020-04-15T15:28:41.729Z",
          "updated_at": "2020-04-15T15:28:41.729Z"
        }
      },
      "Feature1": {
        "summary": "Example placemark feature",
        "value": {
          "id": "grass",
          "title": "Herbe",
          "locale": "fr-FR"
        }
      },
      "Feature2": {
        "summary": "Example placemark feature",
        "value": {
          "id": "small_wall",
          "title": "Petit mur",
          "locale": "fr-FR"
        }
      },
      "Technique1": {
        "summary": "Example technique",
        "value": {
          "id": "double_kong",
          "title": "Double saut de chat",
          "locale": "fr-FR"
        }
      },
      "Technique2": {
        "summary": "Example technique",
        "value": {
          "id": "precision_jump",
          "title": "Saut de précision",
          "locale": "fr-FR"
        }
      },
      "Benefit1": {
        "summary": "Example placemark benefit",
        "value": {
          "id": "covered_area",
          "title": "Espace couvert",
          "locale": "fr-FR"
        }
      },
      "Benefit2": {
        "summary": "Example placemark benefit",
        "value": {
          "id": "drinking_fountain",
          "title": "Fontaine à eau",
          "locale": "fr-FR"
        }
      },
      "Hazard1": {
        "summary": "Example placemark hazard",
        "value": {
          "id": "security",
          "title": "Sécurité",
          "locale": "fr-FR"
        }
      },
      "Hazard2": {
        "summary": "Example placemark hazard",
        "value": {
          "id": "security_cam",
          "title": "Caméra de sécurité",
          "locale": "fr-FR"
        }
      },
      "CreatePlacemarkSubmissionReview1": {
        "summary": "Example placemark submission review creation",
        "value": {
          "opinion": "positive",
          "comment": "Everything looks good."
        }
      },
      "PlacemarkSubmissionReview1": {
        "summary": "Example placemark submission review",
        "value": {
          "id": "5881cf6b-1d3a-48d2-a84c-9a625adbea20",
          "placemark": "f6236b3a-65f1-4157-84f7-f22d6cff8a0a",
          "reviewer": "e8636f06-5a1c-45a2-b1e9-5a693c98c9c8",
          "opinion": "positive",
          "comment": "",
          "created_at": "2020-09-23T07:46:57.524Z"
        }
      },
      "PlacemarkSubmissionReview2": {
        "summary": "Example placemark submission review",
        "value": {
          "id": "b1e642f9-f0cd-4169-bd3f-2441f37b2b88",
          "placemark": "2f5bdf5a-8695-4ace-8def-41ba9f632a97",
          "reviewer": "0350cf76-44ab-480c-8e62-77b47b386827",
          "opinion": "negative",
          "comment": "I know this place, there's no spot here! This should not be accepted.",
          "issues": [
            {
              "$ref": "#/components/examples/PlacemarkLocationIssue"
            }
          ],
          "created_at": "2020-10-05T09:23:21.836Z"
        }
      },
      "PlacemarkSubmissionReport1": {
        "summary": "Example placemark submission report",
        "value": {
          "id": "24ffb61e-ad56-4244-bbd5-673944e74116",
          "placemark": "6af987db-b1f9-4f9d-ab2e-c330b4ec78bd",
          "reviews": [
            {
              "$ref": "#/components/examples/PlacemarkSubmissionReview1"
            },
            {
              "$ref": "#/components/examples/PlacemarkSubmissionReview2"
            }
          ],
          "created_at": "2020-09-23T07:46:57.524Z",
          "updated_at": "2020-10-05T09:23:21.836Z"
        }
      },
      "PlacemarkIssue1": {
        "summary": "Example placemark issue",
        "value": {
          "id": "6037a4cd-0089-4212-a363-98b24d44d1e0",
          "placemark": "faf3c5c7-9d7e-4146-a810-ec3311efe2e9",
          "issuer": "71b4c5ee-2d39-4262-9785-9352a8723418",
          "reason": "type",
          "comment": "This is not a training spot, it is a parkour facility!",
          "state": "addressed",
          "created_at": "2020-08-15T17:01:33.818Z"
        }
      },
      "PlacemarkIssue2": {
        "summary": "Example placemark issue",
        "value": {
          "id": "0d3b0767-611f-4be7-aa93-7f0c7383e0ea",
          "placemark": "a3723353-5e90-4db6-a6af-52ba29407c20",
          "issuer": "185a29c1-2745-4493-8846-f2c1d776b227",
          "reason": "name",
          "comment": "Everyone refers to this spot as \"The maze\".",
          "state": "submitted",
          "created_at": "2020-12-23T22:52:34.051Z"
        }
      },
      "PlacemarkLocationIssue": {
        "summary": "Issue about a placemark's location",
        "value": {
          "id": "eb45729e-e407-4bec-b966-20f752040491",
          "placemark": "2f5bdf5a-8695-4ace-8def-41ba9f632a97",
          "reason": "location",
          "comment": "I know this place, there's no spot here!",
          "state": "submitted",
          "created_at": "2020-07-20T21:16:56.239Z"
        }
      },
      "UnauthorizedError": {
        "description": "Authentication information is missing or is invalid.",
        "value": {
          "error": true,
          "reason": "Unauthorized"
        }
      },
      "BearerAuthNoAuthError": {
        "value": {
          "error": true,
          "reason": "Invalid authorization token."
        }
      },
      "BearerAuthInvalidAuthType": {
        "value": {
          "error": true,
          "reason": "Invalid authorization token."
        }
      },
      "BearerAuthInvalidToken": {
        "value": {
          "error": true,
          "reason": "Invalid authorization token."
        }
      },
      "PlacemarkNotFoundError": {
        "value": {
          "error": true,
          "reason": "Placemark not found."
        }
      },
      "PlacemarkNotSubmittedError": {
        "value": {
          "error": true,
          "reason": "Placemark not submitted."
        }
      },
      "PlacemarkKindNotFoundError": {
        "description": "We could not find the placemark kind you provided.",
        "value": {
          "error": true,
          "reason": "Placemark kind not found"
        }
      },
      "PlacemarkNameTooSmallError": {
        "value": {
          "error": true,
          "reason": "name is less than minimum of 3 character(s)"
        }
      },
      "InvalidPlacemarkStateError": {
        "value": {
          "error": true,
          "reason": "Cannot initialize State from invalid String value lorem_ipsum for key state"
        }
      },
      "InvalidPlacemarkPropertyError": {
        "value": {
          "error": true,
          "reason": "Invalid property: { \"kind\": \"feature\", \"id\": \"random_id\" }"
        }
      },
      "InvalidPlacemarkPropertyKindError": {
        "value": {
          "error": true,
          "reason": "Invalid property kind: \"lorem\""
        }
      },
      "CreatePlacemarkMissingFieldError": {
        "value": {
          "error": true,
          "reason": "name is required"
        }
      },
      "CannotDeleteSomeoneElsesPlacemarkError": {
        "description": "You cannot delete someone else's placemark.",
        "value": {
          "error": true,
          "reason": "You cannot delete someone else's placemark!"
        }
      },
      "CannotSubmitSomeoneElsesPlacemarkError": {
        "description": "You cannot submit someone else's placemark.",
        "value": {
          "error": true,
          "reason": "You cannot submit someone else's placemark!"
        }
      },
      "CannotSubmitPlacemarkTwiceError": {
        "description": "You cannot submit a placemark twice.",
        "value": {
          "error": true,
          "reason": "You cannot submit a placemark twice!"
        }
      },
      "InvalidCoordinatesError": {
        "value": {
          "error": true,
          "reason": "latitude is greater than maximum of 90.0"
        }
      },
      "ForbiddenModeratedFlagError": {
        "description": "Cannot use `moderated` flag.",
        "value": {
          "error": true,
          "reason": "You need to be a moderator in order to use the `moderated` flag."
        }
      }
    }
  }
}